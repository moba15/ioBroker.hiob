{
  "version": 3,
  "sources": ["../../src/search/search-engine.ts"],
  "sourcesContent": ["import * as m from \"../main\";\nexport class StateSearchEngine {\n    adapater : m.SamartHomeHandyBis;\n    firstLevel: Map<string, ioBroker.Object> = new Map();\n    constructor(adapter : m.SamartHomeHandyBis) {\n        this.adapater = adapter;\n    }\n\n    async loadFirstLevel() : Promise<void> {\n        const allObjects = await this.adapater.getForeignObjectsAsync(\"*\");\n        for(const obj in allObjects) {\n            const splitted = obj.split(\".\");\n            if(splitted.length < 2) {\n                continue;\n            }\n            const level = splitted[0] + \".\" + splitted[1];\n            if(this.firstLevel.has(level)) {\n                continue;\n            }\n            const adapaterObj = await this.adapater.getForeignObjectAsync(level);\n            if(adapaterObj != null) {\n                this.firstLevel.set(level, adapaterObj);\n            }\n        }\n    }\n    /**\n     * Get the first layer of states. So basicly all adapters\n     */\n    public getFirstLevel() : Map<string, ioBroker.Object> {\n        return this.firstLevel;\n\n    }\n\n    /**\n     * Searches states by pattern\n     */\n    public async searchKeyWord(keyword: string) : Promise<void> {\n        const allObjects = await this.adapater.getForeignObjectsAsync(\"*\" + keyword + \"*\");\n        for(const obj in allObjects) {\n        }\n\n    }\n\n    public getPossibleEnums() {\n\n    }\n\n    public getPossibleFunctions() {\n\n    }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACO,MAAM,kBAAkB;AAAA,EAG3B,YAAY,SAAgC;AAD5C,sBAA2C,oBAAI,IAAI;AAE/C,SAAK,WAAW;AAAA,EACpB;AAAA,EAEA,MAAM,iBAAiC;AACnC,UAAM,aAAa,MAAM,KAAK,SAAS,uBAAuB,GAAG;AACjE,eAAU,OAAO,YAAY;AACzB,YAAM,WAAW,IAAI,MAAM,GAAG;AAC9B,UAAG,SAAS,SAAS,GAAG;AACpB;AAAA,MACJ;AACA,YAAM,QAAQ,SAAS,CAAC,IAAI,MAAM,SAAS,CAAC;AAC5C,UAAG,KAAK,WAAW,IAAI,KAAK,GAAG;AAC3B;AAAA,MACJ;AACA,YAAM,cAAc,MAAM,KAAK,SAAS,sBAAsB,KAAK;AACnE,UAAG,eAAe,MAAM;AACpB,aAAK,WAAW,IAAI,OAAO,WAAW;AAAA,MAC1C;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAIO,gBAA+C;AAClD,WAAO,KAAK;AAAA,EAEhB;AAAA;AAAA;AAAA;AAAA,EAKA,MAAa,cAAc,SAAiC;AACxD,UAAM,aAAa,MAAM,KAAK,SAAS,uBAAuB,MAAM,UAAU,GAAG;AACjF,eAAU,OAAO,YAAY;AAAA,IAC7B;AAAA,EAEJ;AAAA,EAEO,mBAAmB;AAAA,EAE1B;AAAA,EAEO,uBAAuB;AAAA,EAE9B;AACJ;",
  "names": []
}
