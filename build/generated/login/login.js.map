{
  "version": 3,
  "sources": ["../../../src/generated/login/login.ts"],
  "sourcesContent": ["/**\n * Generated by the protoc-gen-ts.  DO NOT EDIT!\n * compiler version: 5.28.3\n * source: login/login.proto\n * git: https://github.com/thesayyn/protoc-gen-ts */\nimport * as pb_1 from \"google-protobuf\";\nimport * as grpc_1 from \"@grpc/grpc-js\";\nexport class CompatibilityRequest extends pb_1.Message {\n    #one_of_decls: number[][] = [];\n    constructor(data?: any[] | {\n        buildnumber?: string;\n        versionumber?: string;\n    }) {\n        super();\n        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n        if (!Array.isArray(data) && typeof data == \"object\") {\n            if (\"buildnumber\" in data && data.buildnumber != undefined) {\n                this.buildnumber = data.buildnumber;\n            }\n            if (\"versionumber\" in data && data.versionumber != undefined) {\n                this.versionumber = data.versionumber;\n            }\n        }\n    }\n    get buildnumber() {\n        return pb_1.Message.getFieldWithDefault(this, 1, \"\") as string;\n    }\n    set buildnumber(value: string) {\n        pb_1.Message.setField(this, 1, value);\n    }\n    get versionumber() {\n        return pb_1.Message.getFieldWithDefault(this, 2, \"\") as string;\n    }\n    set versionumber(value: string) {\n        pb_1.Message.setField(this, 2, value);\n    }\n    static fromObject(data: {\n        buildnumber?: string;\n        versionumber?: string;\n    }): CompatibilityRequest {\n        const message = new CompatibilityRequest({});\n        if (data.buildnumber != null) {\n            message.buildnumber = data.buildnumber;\n        }\n        if (data.versionumber != null) {\n            message.versionumber = data.versionumber;\n        }\n        return message;\n    }\n    toObject() {\n        const data: {\n            buildnumber?: string;\n            versionumber?: string;\n        } = {};\n        if (this.buildnumber != null) {\n            data.buildnumber = this.buildnumber;\n        }\n        if (this.versionumber != null) {\n            data.versionumber = this.versionumber;\n        }\n        return data;\n    }\n    serialize(): Uint8Array;\n    serialize(w: pb_1.BinaryWriter): void;\n    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n        const writer = w || new pb_1.BinaryWriter();\n        if (this.buildnumber.length)\n            writer.writeString(1, this.buildnumber);\n        if (this.versionumber.length)\n            writer.writeString(2, this.versionumber);\n        if (!w)\n            return writer.getResultBuffer();\n    }\n    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CompatibilityRequest {\n        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CompatibilityRequest();\n        while (reader.nextField()) {\n            if (reader.isEndGroup())\n                break;\n            switch (reader.getFieldNumber()) {\n                case 1:\n                    message.buildnumber = reader.readString();\n                    break;\n                case 2:\n                    message.versionumber = reader.readString();\n                    break;\n                default: reader.skipField();\n            }\n        }\n        return message;\n    }\n    serializeBinary(): Uint8Array {\n        return this.serialize();\n    }\n    static deserializeBinary(bytes: Uint8Array): CompatibilityRequest {\n        return CompatibilityRequest.deserialize(bytes);\n    }\n}\nexport class CompatibilityResponse extends pb_1.Message {\n    #one_of_decls: number[][] = [];\n    constructor(data?: any[] | {\n        buildnumber?: string;\n        versionumber?: string;\n    }) {\n        super();\n        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n        if (!Array.isArray(data) && typeof data == \"object\") {\n            if (\"buildnumber\" in data && data.buildnumber != undefined) {\n                this.buildnumber = data.buildnumber;\n            }\n            if (\"versionumber\" in data && data.versionumber != undefined) {\n                this.versionumber = data.versionumber;\n            }\n        }\n    }\n    get buildnumber() {\n        return pb_1.Message.getFieldWithDefault(this, 1, \"\") as string;\n    }\n    set buildnumber(value: string) {\n        pb_1.Message.setField(this, 1, value);\n    }\n    get versionumber() {\n        return pb_1.Message.getFieldWithDefault(this, 2, \"\") as string;\n    }\n    set versionumber(value: string) {\n        pb_1.Message.setField(this, 2, value);\n    }\n    static fromObject(data: {\n        buildnumber?: string;\n        versionumber?: string;\n    }): CompatibilityResponse {\n        const message = new CompatibilityResponse({});\n        if (data.buildnumber != null) {\n            message.buildnumber = data.buildnumber;\n        }\n        if (data.versionumber != null) {\n            message.versionumber = data.versionumber;\n        }\n        return message;\n    }\n    toObject() {\n        const data: {\n            buildnumber?: string;\n            versionumber?: string;\n        } = {};\n        if (this.buildnumber != null) {\n            data.buildnumber = this.buildnumber;\n        }\n        if (this.versionumber != null) {\n            data.versionumber = this.versionumber;\n        }\n        return data;\n    }\n    serialize(): Uint8Array;\n    serialize(w: pb_1.BinaryWriter): void;\n    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n        const writer = w || new pb_1.BinaryWriter();\n        if (this.buildnumber.length)\n            writer.writeString(1, this.buildnumber);\n        if (this.versionumber.length)\n            writer.writeString(2, this.versionumber);\n        if (!w)\n            return writer.getResultBuffer();\n    }\n    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CompatibilityResponse {\n        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CompatibilityResponse();\n        while (reader.nextField()) {\n            if (reader.isEndGroup())\n                break;\n            switch (reader.getFieldNumber()) {\n                case 1:\n                    message.buildnumber = reader.readString();\n                    break;\n                case 2:\n                    message.versionumber = reader.readString();\n                    break;\n                default: reader.skipField();\n            }\n        }\n        return message;\n    }\n    serializeBinary(): Uint8Array {\n        return this.serialize();\n    }\n    static deserializeBinary(bytes: Uint8Array): CompatibilityResponse {\n        return CompatibilityResponse.deserialize(bytes);\n    }\n}\nexport class FirstPing extends pb_1.Message {\n    #one_of_decls: number[][] = [];\n    constructor(data?: any[] | {\n        buildnumber?: string;\n        versionumber?: string;\n    }) {\n        super();\n        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n        if (!Array.isArray(data) && typeof data == \"object\") {\n            if (\"buildnumber\" in data && data.buildnumber != undefined) {\n                this.buildnumber = data.buildnumber;\n            }\n            if (\"versionumber\" in data && data.versionumber != undefined) {\n                this.versionumber = data.versionumber;\n            }\n        }\n    }\n    get buildnumber() {\n        return pb_1.Message.getFieldWithDefault(this, 1, \"\") as string;\n    }\n    set buildnumber(value: string) {\n        pb_1.Message.setField(this, 1, value);\n    }\n    get versionumber() {\n        return pb_1.Message.getFieldWithDefault(this, 2, \"\") as string;\n    }\n    set versionumber(value: string) {\n        pb_1.Message.setField(this, 2, value);\n    }\n    static fromObject(data: {\n        buildnumber?: string;\n        versionumber?: string;\n    }): FirstPing {\n        const message = new FirstPing({});\n        if (data.buildnumber != null) {\n            message.buildnumber = data.buildnumber;\n        }\n        if (data.versionumber != null) {\n            message.versionumber = data.versionumber;\n        }\n        return message;\n    }\n    toObject() {\n        const data: {\n            buildnumber?: string;\n            versionumber?: string;\n        } = {};\n        if (this.buildnumber != null) {\n            data.buildnumber = this.buildnumber;\n        }\n        if (this.versionumber != null) {\n            data.versionumber = this.versionumber;\n        }\n        return data;\n    }\n    serialize(): Uint8Array;\n    serialize(w: pb_1.BinaryWriter): void;\n    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n        const writer = w || new pb_1.BinaryWriter();\n        if (this.buildnumber.length)\n            writer.writeString(1, this.buildnumber);\n        if (this.versionumber.length)\n            writer.writeString(2, this.versionumber);\n        if (!w)\n            return writer.getResultBuffer();\n    }\n    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): FirstPing {\n        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new FirstPing();\n        while (reader.nextField()) {\n            if (reader.isEndGroup())\n                break;\n            switch (reader.getFieldNumber()) {\n                case 1:\n                    message.buildnumber = reader.readString();\n                    break;\n                case 2:\n                    message.versionumber = reader.readString();\n                    break;\n                default: reader.skipField();\n            }\n        }\n        return message;\n    }\n    serializeBinary(): Uint8Array {\n        return this.serialize();\n    }\n    static deserializeBinary(bytes: Uint8Array): FirstPing {\n        return FirstPing.deserialize(bytes);\n    }\n}\nexport class LoginRequest extends pb_1.Message {\n    #one_of_decls: number[][] = [[5]];\n    constructor(data?: any[] | ({\n        deviceName?: string;\n        deviceId?: string;\n        key?: string;\n        user?: string;\n    } & (({\n        password?: string;\n    })))) {\n        super();\n        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n        if (!Array.isArray(data) && typeof data == \"object\") {\n            if (\"deviceName\" in data && data.deviceName != undefined) {\n                this.deviceName = data.deviceName;\n            }\n            if (\"deviceId\" in data && data.deviceId != undefined) {\n                this.deviceId = data.deviceId;\n            }\n            if (\"key\" in data && data.key != undefined) {\n                this.key = data.key;\n            }\n            if (\"user\" in data && data.user != undefined) {\n                this.user = data.user;\n            }\n            if (\"password\" in data && data.password != undefined) {\n                this.password = data.password;\n            }\n        }\n    }\n    get deviceName() {\n        return pb_1.Message.getFieldWithDefault(this, 1, \"\") as string;\n    }\n    set deviceName(value: string) {\n        pb_1.Message.setField(this, 1, value);\n    }\n    get deviceId() {\n        return pb_1.Message.getFieldWithDefault(this, 2, \"\") as string;\n    }\n    set deviceId(value: string) {\n        pb_1.Message.setField(this, 2, value);\n    }\n    get key() {\n        return pb_1.Message.getFieldWithDefault(this, 3, \"\") as string;\n    }\n    set key(value: string) {\n        pb_1.Message.setField(this, 3, value);\n    }\n    get user() {\n        return pb_1.Message.getFieldWithDefault(this, 4, \"\") as string;\n    }\n    set user(value: string) {\n        pb_1.Message.setField(this, 4, value);\n    }\n    get password() {\n        return pb_1.Message.getFieldWithDefault(this, 5, \"\") as string;\n    }\n    set password(value: string) {\n        pb_1.Message.setOneofField(this, 5, this.#one_of_decls[0], value);\n    }\n    get has_password() {\n        return pb_1.Message.getField(this, 5) != null;\n    }\n    get _password() {\n        const cases: {\n            [index: number]: \"none\" | \"password\";\n        } = {\n            0: \"none\",\n            5: \"password\"\n        };\n        return cases[pb_1.Message.computeOneofCase(this, [5])];\n    }\n    static fromObject(data: {\n        deviceName?: string;\n        deviceId?: string;\n        key?: string;\n        user?: string;\n        password?: string;\n    }): LoginRequest {\n        const message = new LoginRequest({});\n        if (data.deviceName != null) {\n            message.deviceName = data.deviceName;\n        }\n        if (data.deviceId != null) {\n            message.deviceId = data.deviceId;\n        }\n        if (data.key != null) {\n            message.key = data.key;\n        }\n        if (data.user != null) {\n            message.user = data.user;\n        }\n        if (data.password != null) {\n            message.password = data.password;\n        }\n        return message;\n    }\n    toObject() {\n        const data: {\n            deviceName?: string;\n            deviceId?: string;\n            key?: string;\n            user?: string;\n            password?: string;\n        } = {};\n        if (this.deviceName != null) {\n            data.deviceName = this.deviceName;\n        }\n        if (this.deviceId != null) {\n            data.deviceId = this.deviceId;\n        }\n        if (this.key != null) {\n            data.key = this.key;\n        }\n        if (this.user != null) {\n            data.user = this.user;\n        }\n        if (this.password != null) {\n            data.password = this.password;\n        }\n        return data;\n    }\n    serialize(): Uint8Array;\n    serialize(w: pb_1.BinaryWriter): void;\n    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n        const writer = w || new pb_1.BinaryWriter();\n        if (this.deviceName.length)\n            writer.writeString(1, this.deviceName);\n        if (this.deviceId.length)\n            writer.writeString(2, this.deviceId);\n        if (this.key.length)\n            writer.writeString(3, this.key);\n        if (this.user.length)\n            writer.writeString(4, this.user);\n        if (this.has_password)\n            writer.writeString(5, this.password);\n        if (!w)\n            return writer.getResultBuffer();\n    }\n    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): LoginRequest {\n        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new LoginRequest();\n        while (reader.nextField()) {\n            if (reader.isEndGroup())\n                break;\n            switch (reader.getFieldNumber()) {\n                case 1:\n                    message.deviceName = reader.readString();\n                    break;\n                case 2:\n                    message.deviceId = reader.readString();\n                    break;\n                case 3:\n                    message.key = reader.readString();\n                    break;\n                case 4:\n                    message.user = reader.readString();\n                    break;\n                case 5:\n                    message.password = reader.readString();\n                    break;\n                default: reader.skipField();\n            }\n        }\n        return message;\n    }\n    serializeBinary(): Uint8Array {\n        return this.serialize();\n    }\n    static deserializeBinary(bytes: Uint8Array): LoginRequest {\n        return LoginRequest.deserialize(bytes);\n    }\n}\nexport class LoginResponse extends pb_1.Message {\n    #one_of_decls: number[][] = [[2]];\n    constructor(data?: any[] | ({\n        status?: LoginResponse.Status;\n        sessionId?: string;\n    } & (({\n        errorMsg?: string;\n    })))) {\n        super();\n        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n        if (!Array.isArray(data) && typeof data == \"object\") {\n            if (\"status\" in data && data.status != undefined) {\n                this.status = data.status;\n            }\n            if (\"errorMsg\" in data && data.errorMsg != undefined) {\n                this.errorMsg = data.errorMsg;\n            }\n            if (\"sessionId\" in data && data.sessionId != undefined) {\n                this.sessionId = data.sessionId;\n            }\n        }\n    }\n    get status() {\n        return pb_1.Message.getFieldWithDefault(this, 1, LoginResponse.Status.succesfull) as LoginResponse.Status;\n    }\n    set status(value: LoginResponse.Status) {\n        pb_1.Message.setField(this, 1, value);\n    }\n    get errorMsg() {\n        return pb_1.Message.getFieldWithDefault(this, 2, \"\") as string;\n    }\n    set errorMsg(value: string) {\n        pb_1.Message.setOneofField(this, 2, this.#one_of_decls[0], value);\n    }\n    get has_errorMsg() {\n        return pb_1.Message.getField(this, 2) != null;\n    }\n    get sessionId() {\n        return pb_1.Message.getFieldWithDefault(this, 3, \"\") as string;\n    }\n    set sessionId(value: string) {\n        pb_1.Message.setField(this, 3, value);\n    }\n    get _errorMsg() {\n        const cases: {\n            [index: number]: \"none\" | \"errorMsg\";\n        } = {\n            0: \"none\",\n            2: \"errorMsg\"\n        };\n        return cases[pb_1.Message.computeOneofCase(this, [2])];\n    }\n    static fromObject(data: {\n        status?: LoginResponse.Status;\n        errorMsg?: string;\n        sessionId?: string;\n    }): LoginResponse {\n        const message = new LoginResponse({});\n        if (data.status != null) {\n            message.status = data.status;\n        }\n        if (data.errorMsg != null) {\n            message.errorMsg = data.errorMsg;\n        }\n        if (data.sessionId != null) {\n            message.sessionId = data.sessionId;\n        }\n        return message;\n    }\n    toObject() {\n        const data: {\n            status?: LoginResponse.Status;\n            errorMsg?: string;\n            sessionId?: string;\n        } = {};\n        if (this.status != null) {\n            data.status = this.status;\n        }\n        if (this.errorMsg != null) {\n            data.errorMsg = this.errorMsg;\n        }\n        if (this.sessionId != null) {\n            data.sessionId = this.sessionId;\n        }\n        return data;\n    }\n    serialize(): Uint8Array;\n    serialize(w: pb_1.BinaryWriter): void;\n    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n        const writer = w || new pb_1.BinaryWriter();\n        if (this.status != LoginResponse.Status.succesfull)\n            writer.writeEnum(1, this.status);\n        if (this.has_errorMsg)\n            writer.writeString(2, this.errorMsg);\n        if (this.sessionId.length)\n            writer.writeString(3, this.sessionId);\n        if (!w)\n            return writer.getResultBuffer();\n    }\n    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): LoginResponse {\n        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new LoginResponse();\n        while (reader.nextField()) {\n            if (reader.isEndGroup())\n                break;\n            switch (reader.getFieldNumber()) {\n                case 1:\n                    message.status = reader.readEnum();\n                    break;\n                case 2:\n                    message.errorMsg = reader.readString();\n                    break;\n                case 3:\n                    message.sessionId = reader.readString();\n                    break;\n                default: reader.skipField();\n            }\n        }\n        return message;\n    }\n    serializeBinary(): Uint8Array {\n        return this.serialize();\n    }\n    static deserializeBinary(bytes: Uint8Array): LoginResponse {\n        return LoginResponse.deserialize(bytes);\n    }\n}\nexport namespace LoginResponse {\n    export enum Status {\n        succesfull = 0,\n        wrongKey = 1,\n        wrongPassword = 2,\n        error = 3,\n        notApproved = 4\n    }\n}\nexport class NewAesPacket extends pb_1.Message {\n    #one_of_decls: number[][] = [];\n    constructor(data?: any[] | {}) {\n        super();\n        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n        if (!Array.isArray(data) && typeof data == \"object\") { }\n    }\n    static fromObject(data: {}): NewAesPacket {\n        const message = new NewAesPacket({});\n        return message;\n    }\n    toObject() {\n        const data: {} = {};\n        return data;\n    }\n    serialize(): Uint8Array;\n    serialize(w: pb_1.BinaryWriter): void;\n    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n        const writer = w || new pb_1.BinaryWriter();\n        if (!w)\n            return writer.getResultBuffer();\n    }\n    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): NewAesPacket {\n        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new NewAesPacket();\n        while (reader.nextField()) {\n            if (reader.isEndGroup())\n                break;\n            switch (reader.getFieldNumber()) {\n                default: reader.skipField();\n            }\n        }\n        return message;\n    }\n    serializeBinary(): Uint8Array {\n        return this.serialize();\n    }\n    static deserializeBinary(bytes: Uint8Array): NewAesPacket {\n        return NewAesPacket.deserialize(bytes);\n    }\n}\nexport class WrongAesKeyPack extends pb_1.Message {\n    #one_of_decls: number[][] = [];\n    constructor(data?: any[] | {}) {\n        super();\n        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n        if (!Array.isArray(data) && typeof data == \"object\") { }\n    }\n    static fromObject(data: {}): WrongAesKeyPack {\n        const message = new WrongAesKeyPack({});\n        return message;\n    }\n    toObject() {\n        const data: {} = {};\n        return data;\n    }\n    serialize(): Uint8Array;\n    serialize(w: pb_1.BinaryWriter): void;\n    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n        const writer = w || new pb_1.BinaryWriter();\n        if (!w)\n            return writer.getResultBuffer();\n    }\n    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): WrongAesKeyPack {\n        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new WrongAesKeyPack();\n        while (reader.nextField()) {\n            if (reader.isEndGroup())\n                break;\n            switch (reader.getFieldNumber()) {\n                default: reader.skipField();\n            }\n        }\n        return message;\n    }\n    serializeBinary(): Uint8Array {\n        return this.serialize();\n    }\n    static deserializeBinary(bytes: Uint8Array): WrongAesKeyPack {\n        return WrongAesKeyPack.deserialize(bytes);\n    }\n}\nexport class ApprovalRequest extends pb_1.Message {\n    #one_of_decls: number[][] = [];\n    constructor(data?: any[] | {\n        deviceName?: string;\n        deviceId?: string;\n    }) {\n        super();\n        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n        if (!Array.isArray(data) && typeof data == \"object\") {\n            if (\"deviceName\" in data && data.deviceName != undefined) {\n                this.deviceName = data.deviceName;\n            }\n            if (\"deviceId\" in data && data.deviceId != undefined) {\n                this.deviceId = data.deviceId;\n            }\n        }\n    }\n    get deviceName() {\n        return pb_1.Message.getFieldWithDefault(this, 1, \"\") as string;\n    }\n    set deviceName(value: string) {\n        pb_1.Message.setField(this, 1, value);\n    }\n    get deviceId() {\n        return pb_1.Message.getFieldWithDefault(this, 2, \"\") as string;\n    }\n    set deviceId(value: string) {\n        pb_1.Message.setField(this, 2, value);\n    }\n    static fromObject(data: {\n        deviceName?: string;\n        deviceId?: string;\n    }): ApprovalRequest {\n        const message = new ApprovalRequest({});\n        if (data.deviceName != null) {\n            message.deviceName = data.deviceName;\n        }\n        if (data.deviceId != null) {\n            message.deviceId = data.deviceId;\n        }\n        return message;\n    }\n    toObject() {\n        const data: {\n            deviceName?: string;\n            deviceId?: string;\n        } = {};\n        if (this.deviceName != null) {\n            data.deviceName = this.deviceName;\n        }\n        if (this.deviceId != null) {\n            data.deviceId = this.deviceId;\n        }\n        return data;\n    }\n    serialize(): Uint8Array;\n    serialize(w: pb_1.BinaryWriter): void;\n    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n        const writer = w || new pb_1.BinaryWriter();\n        if (this.deviceName.length)\n            writer.writeString(1, this.deviceName);\n        if (this.deviceId.length)\n            writer.writeString(2, this.deviceId);\n        if (!w)\n            return writer.getResultBuffer();\n    }\n    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ApprovalRequest {\n        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ApprovalRequest();\n        while (reader.nextField()) {\n            if (reader.isEndGroup())\n                break;\n            switch (reader.getFieldNumber()) {\n                case 1:\n                    message.deviceName = reader.readString();\n                    break;\n                case 2:\n                    message.deviceId = reader.readString();\n                    break;\n                default: reader.skipField();\n            }\n        }\n        return message;\n    }\n    serializeBinary(): Uint8Array {\n        return this.serialize();\n    }\n    static deserializeBinary(bytes: Uint8Array): ApprovalRequest {\n        return ApprovalRequest.deserialize(bytes);\n    }\n}\nexport class ApprovalResponse extends pb_1.Message {\n    #one_of_decls: number[][] = [[2]];\n    constructor(data?: any[] | ({\n        status?: ApprovalResponse.Status;\n    } & (({\n        key?: string;\n    })))) {\n        super();\n        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n        if (!Array.isArray(data) && typeof data == \"object\") {\n            if (\"status\" in data && data.status != undefined) {\n                this.status = data.status;\n            }\n            if (\"key\" in data && data.key != undefined) {\n                this.key = data.key;\n            }\n        }\n    }\n    get status() {\n        return pb_1.Message.getFieldWithDefault(this, 1, ApprovalResponse.Status.aprroved) as ApprovalResponse.Status;\n    }\n    set status(value: ApprovalResponse.Status) {\n        pb_1.Message.setField(this, 1, value);\n    }\n    get key() {\n        return pb_1.Message.getFieldWithDefault(this, 2, \"\") as string;\n    }\n    set key(value: string) {\n        pb_1.Message.setOneofField(this, 2, this.#one_of_decls[0], value);\n    }\n    get has_key() {\n        return pb_1.Message.getField(this, 2) != null;\n    }\n    get _key() {\n        const cases: {\n            [index: number]: \"none\" | \"key\";\n        } = {\n            0: \"none\",\n            2: \"key\"\n        };\n        return cases[pb_1.Message.computeOneofCase(this, [2])];\n    }\n    static fromObject(data: {\n        status?: ApprovalResponse.Status;\n        key?: string;\n    }): ApprovalResponse {\n        const message = new ApprovalResponse({});\n        if (data.status != null) {\n            message.status = data.status;\n        }\n        if (data.key != null) {\n            message.key = data.key;\n        }\n        return message;\n    }\n    toObject() {\n        const data: {\n            status?: ApprovalResponse.Status;\n            key?: string;\n        } = {};\n        if (this.status != null) {\n            data.status = this.status;\n        }\n        if (this.key != null) {\n            data.key = this.key;\n        }\n        return data;\n    }\n    serialize(): Uint8Array;\n    serialize(w: pb_1.BinaryWriter): void;\n    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n        const writer = w || new pb_1.BinaryWriter();\n        if (this.status != ApprovalResponse.Status.aprroved)\n            writer.writeEnum(1, this.status);\n        if (this.has_key)\n            writer.writeString(2, this.key);\n        if (!w)\n            return writer.getResultBuffer();\n    }\n    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ApprovalResponse {\n        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ApprovalResponse();\n        while (reader.nextField()) {\n            if (reader.isEndGroup())\n                break;\n            switch (reader.getFieldNumber()) {\n                case 1:\n                    message.status = reader.readEnum();\n                    break;\n                case 2:\n                    message.key = reader.readString();\n                    break;\n                default: reader.skipField();\n            }\n        }\n        return message;\n    }\n    serializeBinary(): Uint8Array {\n        return this.serialize();\n    }\n    static deserializeBinary(bytes: Uint8Array): ApprovalResponse {\n        return ApprovalResponse.deserialize(bytes);\n    }\n}\nexport namespace ApprovalResponse {\n    export enum Status {\n        aprroved = 0,\n        timeout = 1\n    }\n}\ninterface GrpcUnaryServiceInterface<P, R> {\n    (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;\n    (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;\n    (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;\n    (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;\n}\ninterface GrpcStreamServiceInterface<P, R> {\n    (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;\n    (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;\n}\ninterface GrpWritableServiceInterface<P, R> {\n    (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;\n    (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;\n    (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;\n    (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;\n}\ninterface GrpcChunkServiceInterface<P, R> {\n    (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;\n    (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;\n}\ninterface GrpcPromiseServiceInterface<P, R> {\n    (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;\n    (message: P, options?: grpc_1.CallOptions): Promise<R>;\n}\nexport abstract class UnimplementedLoginService {\n    static definition = {\n        CheckCompatibility: {\n            path: \"/Login/CheckCompatibility\",\n            requestStream: false,\n            responseStream: false,\n            requestSerialize: (message: CompatibilityRequest) => Buffer.from(message.serialize()),\n            requestDeserialize: (bytes: Buffer) => CompatibilityRequest.deserialize(new Uint8Array(bytes)),\n            responseSerialize: (message: CompatibilityResponse) => Buffer.from(message.serialize()),\n            responseDeserialize: (bytes: Buffer) => CompatibilityResponse.deserialize(new Uint8Array(bytes))\n        },\n        Login: {\n            path: \"/Login/Login\",\n            requestStream: false,\n            responseStream: false,\n            requestSerialize: (message: LoginRequest) => Buffer.from(message.serialize()),\n            requestDeserialize: (bytes: Buffer) => LoginRequest.deserialize(new Uint8Array(bytes)),\n            responseSerialize: (message: LoginResponse) => Buffer.from(message.serialize()),\n            responseDeserialize: (bytes: Buffer) => LoginResponse.deserialize(new Uint8Array(bytes))\n        },\n        RequestApproval: {\n            path: \"/Login/RequestApproval\",\n            requestStream: false,\n            responseStream: false,\n            requestSerialize: (message: ApprovalRequest) => Buffer.from(message.serialize()),\n            requestDeserialize: (bytes: Buffer) => ApprovalRequest.deserialize(new Uint8Array(bytes)),\n            responseSerialize: (message: ApprovalResponse) => Buffer.from(message.serialize()),\n            responseDeserialize: (bytes: Buffer) => ApprovalResponse.deserialize(new Uint8Array(bytes))\n        }\n    };\n    [method: string]: grpc_1.UntypedHandleCall;\n    abstract CheckCompatibility(call: grpc_1.ServerUnaryCall<CompatibilityRequest, CompatibilityResponse>, callback: grpc_1.sendUnaryData<CompatibilityResponse>): void;\n    abstract Login(call: grpc_1.ServerUnaryCall<LoginRequest, LoginResponse>, callback: grpc_1.sendUnaryData<LoginResponse>): void;\n    abstract RequestApproval(call: grpc_1.ServerUnaryCall<ApprovalRequest, ApprovalResponse>, callback: grpc_1.sendUnaryData<ApprovalResponse>): void;\n}\nexport class LoginClient extends grpc_1.makeGenericClientConstructor(UnimplementedLoginService.definition, \"Login\", {}) {\n    constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {\n        super(address, credentials, options);\n    }\n    CheckCompatibility: GrpcUnaryServiceInterface<CompatibilityRequest, CompatibilityResponse> = (message: CompatibilityRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<CompatibilityResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<CompatibilityResponse>, callback?: grpc_1.requestCallback<CompatibilityResponse>): grpc_1.ClientUnaryCall => {\n        return super.CheckCompatibility(message, metadata, options, callback);\n    };\n    Login: GrpcUnaryServiceInterface<LoginRequest, LoginResponse> = (message: LoginRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<LoginResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<LoginResponse>, callback?: grpc_1.requestCallback<LoginResponse>): grpc_1.ClientUnaryCall => {\n        return super.Login(message, metadata, options, callback);\n    };\n    RequestApproval: GrpcUnaryServiceInterface<ApprovalRequest, ApprovalResponse> = (message: ApprovalRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<ApprovalResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<ApprovalResponse>, callback?: grpc_1.requestCallback<ApprovalResponse>): grpc_1.ClientUnaryCall => {\n        return super.RequestApproval(message, metadata, options, callback);\n    };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,WAAsB;AACtB,aAAwB;AANxB,mBAAAA;AAOO,MAAM,wBAAN,MAAM,8BAA6B,KAAK,QAAQ;AAAA,EAEnD,YAAY,MAGT;AACC,UAAM;AALV,sCAA4B,CAAC;AAMzB,SAAK,QAAQ,WAAW,MAAM,MAAM,QAAQ,IAAI,IAAI,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,mBAAK,cAAa;AAC5F,QAAI,CAAC,MAAM,QAAQ,IAAI,KAAK,OAAO,QAAQ,UAAU;AACjD,UAAI,iBAAiB,QAAQ,KAAK,eAAe,QAAW;AACxD,aAAK,cAAc,KAAK;AAAA,MAC5B;AACA,UAAI,kBAAkB,QAAQ,KAAK,gBAAgB,QAAW;AAC1D,aAAK,eAAe,KAAK;AAAA,MAC7B;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,IAAI,cAAc;AACd,WAAO,KAAK,QAAQ,oBAAoB,MAAM,GAAG,EAAE;AAAA,EACvD;AAAA,EACA,IAAI,YAAY,OAAe;AAC3B,SAAK,QAAQ,SAAS,MAAM,GAAG,KAAK;AAAA,EACxC;AAAA,EACA,IAAI,eAAe;AACf,WAAO,KAAK,QAAQ,oBAAoB,MAAM,GAAG,EAAE;AAAA,EACvD;AAAA,EACA,IAAI,aAAa,OAAe;AAC5B,SAAK,QAAQ,SAAS,MAAM,GAAG,KAAK;AAAA,EACxC;AAAA,EACA,OAAO,WAAW,MAGO;AACrB,UAAM,UAAU,IAAI,sBAAqB,CAAC,CAAC;AAC3C,QAAI,KAAK,eAAe,MAAM;AAC1B,cAAQ,cAAc,KAAK;AAAA,IAC/B;AACA,QAAI,KAAK,gBAAgB,MAAM;AAC3B,cAAQ,eAAe,KAAK;AAAA,IAChC;AACA,WAAO;AAAA,EACX;AAAA,EACA,WAAW;AACP,UAAM,OAGF,CAAC;AACL,QAAI,KAAK,eAAe,MAAM;AAC1B,WAAK,cAAc,KAAK;AAAA,IAC5B;AACA,QAAI,KAAK,gBAAgB,MAAM;AAC3B,WAAK,eAAe,KAAK;AAAA,IAC7B;AACA,WAAO;AAAA,EACX;AAAA,EAGA,UAAU,GAA0C;AAChD,UAAM,SAAS,KAAK,IAAI,KAAK,aAAa;AAC1C,QAAI,KAAK,YAAY;AACjB,aAAO,YAAY,GAAG,KAAK,WAAW;AAC1C,QAAI,KAAK,aAAa;AAClB,aAAO,YAAY,GAAG,KAAK,YAAY;AAC3C,QAAI,CAAC;AACD,aAAO,OAAO,gBAAgB;AAAA,EACtC;AAAA,EACA,OAAO,YAAY,OAA6D;AAC5E,UAAM,SAAS,iBAAiB,KAAK,eAAe,QAAQ,IAAI,KAAK,aAAa,KAAK,GAAG,UAAU,IAAI,sBAAqB;AAC7H,WAAO,OAAO,UAAU,GAAG;AACvB,UAAI,OAAO,WAAW;AAClB;AACJ,cAAQ,OAAO,eAAe,GAAG;AAAA,QAC7B,KAAK;AACD,kBAAQ,cAAc,OAAO,WAAW;AACxC;AAAA,QACJ,KAAK;AACD,kBAAQ,eAAe,OAAO,WAAW;AACzC;AAAA,QACJ;AAAS,iBAAO,UAAU;AAAA,MAC9B;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,kBAA8B;AAC1B,WAAO,KAAK,UAAU;AAAA,EAC1B;AAAA,EACA,OAAO,kBAAkB,OAAyC;AAC9D,WAAO,sBAAqB,YAAY,KAAK;AAAA,EACjD;AACJ;AAxFI;AADG,IAAM,uBAAN;AA0FA,MAAM,yBAAN,MAAM,+BAA8B,KAAK,QAAQ;AAAA,EAEpD,YAAY,MAGT;AACC,UAAM;AALV,uBAAAA,gBAA4B,CAAC;AAMzB,SAAK,QAAQ,WAAW,MAAM,MAAM,QAAQ,IAAI,IAAI,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,mBAAKA,eAAa;AAC5F,QAAI,CAAC,MAAM,QAAQ,IAAI,KAAK,OAAO,QAAQ,UAAU;AACjD,UAAI,iBAAiB,QAAQ,KAAK,eAAe,QAAW;AACxD,aAAK,cAAc,KAAK;AAAA,MAC5B;AACA,UAAI,kBAAkB,QAAQ,KAAK,gBAAgB,QAAW;AAC1D,aAAK,eAAe,KAAK;AAAA,MAC7B;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,IAAI,cAAc;AACd,WAAO,KAAK,QAAQ,oBAAoB,MAAM,GAAG,EAAE;AAAA,EACvD;AAAA,EACA,IAAI,YAAY,OAAe;AAC3B,SAAK,QAAQ,SAAS,MAAM,GAAG,KAAK;AAAA,EACxC;AAAA,EACA,IAAI,eAAe;AACf,WAAO,KAAK,QAAQ,oBAAoB,MAAM,GAAG,EAAE;AAAA,EACvD;AAAA,EACA,IAAI,aAAa,OAAe;AAC5B,SAAK,QAAQ,SAAS,MAAM,GAAG,KAAK;AAAA,EACxC;AAAA,EACA,OAAO,WAAW,MAGQ;AACtB,UAAM,UAAU,IAAI,uBAAsB,CAAC,CAAC;AAC5C,QAAI,KAAK,eAAe,MAAM;AAC1B,cAAQ,cAAc,KAAK;AAAA,IAC/B;AACA,QAAI,KAAK,gBAAgB,MAAM;AAC3B,cAAQ,eAAe,KAAK;AAAA,IAChC;AACA,WAAO;AAAA,EACX;AAAA,EACA,WAAW;AACP,UAAM,OAGF,CAAC;AACL,QAAI,KAAK,eAAe,MAAM;AAC1B,WAAK,cAAc,KAAK;AAAA,IAC5B;AACA,QAAI,KAAK,gBAAgB,MAAM;AAC3B,WAAK,eAAe,KAAK;AAAA,IAC7B;AACA,WAAO;AAAA,EACX;AAAA,EAGA,UAAU,GAA0C;AAChD,UAAM,SAAS,KAAK,IAAI,KAAK,aAAa;AAC1C,QAAI,KAAK,YAAY;AACjB,aAAO,YAAY,GAAG,KAAK,WAAW;AAC1C,QAAI,KAAK,aAAa;AAClB,aAAO,YAAY,GAAG,KAAK,YAAY;AAC3C,QAAI,CAAC;AACD,aAAO,OAAO,gBAAgB;AAAA,EACtC;AAAA,EACA,OAAO,YAAY,OAA8D;AAC7E,UAAM,SAAS,iBAAiB,KAAK,eAAe,QAAQ,IAAI,KAAK,aAAa,KAAK,GAAG,UAAU,IAAI,uBAAsB;AAC9H,WAAO,OAAO,UAAU,GAAG;AACvB,UAAI,OAAO,WAAW;AAClB;AACJ,cAAQ,OAAO,eAAe,GAAG;AAAA,QAC7B,KAAK;AACD,kBAAQ,cAAc,OAAO,WAAW;AACxC;AAAA,QACJ,KAAK;AACD,kBAAQ,eAAe,OAAO,WAAW;AACzC;AAAA,QACJ;AAAS,iBAAO,UAAU;AAAA,MAC9B;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,kBAA8B;AAC1B,WAAO,KAAK,UAAU;AAAA,EAC1B;AAAA,EACA,OAAO,kBAAkB,OAA0C;AAC/D,WAAO,uBAAsB,YAAY,KAAK;AAAA,EAClD;AACJ;AAxFIA,iBAAA;AADG,IAAM,wBAAN;AA0FA,MAAM,aAAN,MAAM,mBAAkB,KAAK,QAAQ;AAAA,EAExC,YAAY,MAGT;AACC,UAAM;AALV,uBAAAA,gBAA4B,CAAC;AAMzB,SAAK,QAAQ,WAAW,MAAM,MAAM,QAAQ,IAAI,IAAI,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,mBAAKA,eAAa;AAC5F,QAAI,CAAC,MAAM,QAAQ,IAAI,KAAK,OAAO,QAAQ,UAAU;AACjD,UAAI,iBAAiB,QAAQ,KAAK,eAAe,QAAW;AACxD,aAAK,cAAc,KAAK;AAAA,MAC5B;AACA,UAAI,kBAAkB,QAAQ,KAAK,gBAAgB,QAAW;AAC1D,aAAK,eAAe,KAAK;AAAA,MAC7B;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,IAAI,cAAc;AACd,WAAO,KAAK,QAAQ,oBAAoB,MAAM,GAAG,EAAE;AAAA,EACvD;AAAA,EACA,IAAI,YAAY,OAAe;AAC3B,SAAK,QAAQ,SAAS,MAAM,GAAG,KAAK;AAAA,EACxC;AAAA,EACA,IAAI,eAAe;AACf,WAAO,KAAK,QAAQ,oBAAoB,MAAM,GAAG,EAAE;AAAA,EACvD;AAAA,EACA,IAAI,aAAa,OAAe;AAC5B,SAAK,QAAQ,SAAS,MAAM,GAAG,KAAK;AAAA,EACxC;AAAA,EACA,OAAO,WAAW,MAGJ;AACV,UAAM,UAAU,IAAI,WAAU,CAAC,CAAC;AAChC,QAAI,KAAK,eAAe,MAAM;AAC1B,cAAQ,cAAc,KAAK;AAAA,IAC/B;AACA,QAAI,KAAK,gBAAgB,MAAM;AAC3B,cAAQ,eAAe,KAAK;AAAA,IAChC;AACA,WAAO;AAAA,EACX;AAAA,EACA,WAAW;AACP,UAAM,OAGF,CAAC;AACL,QAAI,KAAK,eAAe,MAAM;AAC1B,WAAK,cAAc,KAAK;AAAA,IAC5B;AACA,QAAI,KAAK,gBAAgB,MAAM;AAC3B,WAAK,eAAe,KAAK;AAAA,IAC7B;AACA,WAAO;AAAA,EACX;AAAA,EAGA,UAAU,GAA0C;AAChD,UAAM,SAAS,KAAK,IAAI,KAAK,aAAa;AAC1C,QAAI,KAAK,YAAY;AACjB,aAAO,YAAY,GAAG,KAAK,WAAW;AAC1C,QAAI,KAAK,aAAa;AAClB,aAAO,YAAY,GAAG,KAAK,YAAY;AAC3C,QAAI,CAAC;AACD,aAAO,OAAO,gBAAgB;AAAA,EACtC;AAAA,EACA,OAAO,YAAY,OAAkD;AACjE,UAAM,SAAS,iBAAiB,KAAK,eAAe,QAAQ,IAAI,KAAK,aAAa,KAAK,GAAG,UAAU,IAAI,WAAU;AAClH,WAAO,OAAO,UAAU,GAAG;AACvB,UAAI,OAAO,WAAW;AAClB;AACJ,cAAQ,OAAO,eAAe,GAAG;AAAA,QAC7B,KAAK;AACD,kBAAQ,cAAc,OAAO,WAAW;AACxC;AAAA,QACJ,KAAK;AACD,kBAAQ,eAAe,OAAO,WAAW;AACzC;AAAA,QACJ;AAAS,iBAAO,UAAU;AAAA,MAC9B;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,kBAA8B;AAC1B,WAAO,KAAK,UAAU;AAAA,EAC1B;AAAA,EACA,OAAO,kBAAkB,OAA8B;AACnD,WAAO,WAAU,YAAY,KAAK;AAAA,EACtC;AACJ;AAxFIA,iBAAA;AADG,IAAM,YAAN;AA0FA,MAAM,gBAAN,MAAM,sBAAqB,KAAK,QAAQ;AAAA,EAE3C,YAAY,MAON;AACF,UAAM;AATV,uBAAAA,gBAA4B,CAAC,CAAC,CAAC,CAAC;AAU5B,SAAK,QAAQ,WAAW,MAAM,MAAM,QAAQ,IAAI,IAAI,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,mBAAKA,eAAa;AAC5F,QAAI,CAAC,MAAM,QAAQ,IAAI,KAAK,OAAO,QAAQ,UAAU;AACjD,UAAI,gBAAgB,QAAQ,KAAK,cAAc,QAAW;AACtD,aAAK,aAAa,KAAK;AAAA,MAC3B;AACA,UAAI,cAAc,QAAQ,KAAK,YAAY,QAAW;AAClD,aAAK,WAAW,KAAK;AAAA,MACzB;AACA,UAAI,SAAS,QAAQ,KAAK,OAAO,QAAW;AACxC,aAAK,MAAM,KAAK;AAAA,MACpB;AACA,UAAI,UAAU,QAAQ,KAAK,QAAQ,QAAW;AAC1C,aAAK,OAAO,KAAK;AAAA,MACrB;AACA,UAAI,cAAc,QAAQ,KAAK,YAAY,QAAW;AAClD,aAAK,WAAW,KAAK;AAAA,MACzB;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,IAAI,aAAa;AACb,WAAO,KAAK,QAAQ,oBAAoB,MAAM,GAAG,EAAE;AAAA,EACvD;AAAA,EACA,IAAI,WAAW,OAAe;AAC1B,SAAK,QAAQ,SAAS,MAAM,GAAG,KAAK;AAAA,EACxC;AAAA,EACA,IAAI,WAAW;AACX,WAAO,KAAK,QAAQ,oBAAoB,MAAM,GAAG,EAAE;AAAA,EACvD;AAAA,EACA,IAAI,SAAS,OAAe;AACxB,SAAK,QAAQ,SAAS,MAAM,GAAG,KAAK;AAAA,EACxC;AAAA,EACA,IAAI,MAAM;AACN,WAAO,KAAK,QAAQ,oBAAoB,MAAM,GAAG,EAAE;AAAA,EACvD;AAAA,EACA,IAAI,IAAI,OAAe;AACnB,SAAK,QAAQ,SAAS,MAAM,GAAG,KAAK;AAAA,EACxC;AAAA,EACA,IAAI,OAAO;AACP,WAAO,KAAK,QAAQ,oBAAoB,MAAM,GAAG,EAAE;AAAA,EACvD;AAAA,EACA,IAAI,KAAK,OAAe;AACpB,SAAK,QAAQ,SAAS,MAAM,GAAG,KAAK;AAAA,EACxC;AAAA,EACA,IAAI,WAAW;AACX,WAAO,KAAK,QAAQ,oBAAoB,MAAM,GAAG,EAAE;AAAA,EACvD;AAAA,EACA,IAAI,SAAS,OAAe;AACxB,SAAK,QAAQ,cAAc,MAAM,GAAG,mBAAKA,gBAAc,CAAC,GAAG,KAAK;AAAA,EACpE;AAAA,EACA,IAAI,eAAe;AACf,WAAO,KAAK,QAAQ,SAAS,MAAM,CAAC,KAAK;AAAA,EAC7C;AAAA,EACA,IAAI,YAAY;AACZ,UAAM,QAEF;AAAA,MACA,GAAG;AAAA,MACH,GAAG;AAAA,IACP;AACA,WAAO,MAAM,KAAK,QAAQ,iBAAiB,MAAM,CAAC,CAAC,CAAC,CAAC;AAAA,EACzD;AAAA,EACA,OAAO,WAAW,MAMD;AACb,UAAM,UAAU,IAAI,cAAa,CAAC,CAAC;AACnC,QAAI,KAAK,cAAc,MAAM;AACzB,cAAQ,aAAa,KAAK;AAAA,IAC9B;AACA,QAAI,KAAK,YAAY,MAAM;AACvB,cAAQ,WAAW,KAAK;AAAA,IAC5B;AACA,QAAI,KAAK,OAAO,MAAM;AAClB,cAAQ,MAAM,KAAK;AAAA,IACvB;AACA,QAAI,KAAK,QAAQ,MAAM;AACnB,cAAQ,OAAO,KAAK;AAAA,IACxB;AACA,QAAI,KAAK,YAAY,MAAM;AACvB,cAAQ,WAAW,KAAK;AAAA,IAC5B;AACA,WAAO;AAAA,EACX;AAAA,EACA,WAAW;AACP,UAAM,OAMF,CAAC;AACL,QAAI,KAAK,cAAc,MAAM;AACzB,WAAK,aAAa,KAAK;AAAA,IAC3B;AACA,QAAI,KAAK,YAAY,MAAM;AACvB,WAAK,WAAW,KAAK;AAAA,IACzB;AACA,QAAI,KAAK,OAAO,MAAM;AAClB,WAAK,MAAM,KAAK;AAAA,IACpB;AACA,QAAI,KAAK,QAAQ,MAAM;AACnB,WAAK,OAAO,KAAK;AAAA,IACrB;AACA,QAAI,KAAK,YAAY,MAAM;AACvB,WAAK,WAAW,KAAK;AAAA,IACzB;AACA,WAAO;AAAA,EACX;AAAA,EAGA,UAAU,GAA0C;AAChD,UAAM,SAAS,KAAK,IAAI,KAAK,aAAa;AAC1C,QAAI,KAAK,WAAW;AAChB,aAAO,YAAY,GAAG,KAAK,UAAU;AACzC,QAAI,KAAK,SAAS;AACd,aAAO,YAAY,GAAG,KAAK,QAAQ;AACvC,QAAI,KAAK,IAAI;AACT,aAAO,YAAY,GAAG,KAAK,GAAG;AAClC,QAAI,KAAK,KAAK;AACV,aAAO,YAAY,GAAG,KAAK,IAAI;AACnC,QAAI,KAAK;AACL,aAAO,YAAY,GAAG,KAAK,QAAQ;AACvC,QAAI,CAAC;AACD,aAAO,OAAO,gBAAgB;AAAA,EACtC;AAAA,EACA,OAAO,YAAY,OAAqD;AACpE,UAAM,SAAS,iBAAiB,KAAK,eAAe,QAAQ,IAAI,KAAK,aAAa,KAAK,GAAG,UAAU,IAAI,cAAa;AACrH,WAAO,OAAO,UAAU,GAAG;AACvB,UAAI,OAAO,WAAW;AAClB;AACJ,cAAQ,OAAO,eAAe,GAAG;AAAA,QAC7B,KAAK;AACD,kBAAQ,aAAa,OAAO,WAAW;AACvC;AAAA,QACJ,KAAK;AACD,kBAAQ,WAAW,OAAO,WAAW;AACrC;AAAA,QACJ,KAAK;AACD,kBAAQ,MAAM,OAAO,WAAW;AAChC;AAAA,QACJ,KAAK;AACD,kBAAQ,OAAO,OAAO,WAAW;AACjC;AAAA,QACJ,KAAK;AACD,kBAAQ,WAAW,OAAO,WAAW;AACrC;AAAA,QACJ;AAAS,iBAAO,UAAU;AAAA,MAC9B;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,kBAA8B;AAC1B,WAAO,KAAK,UAAU;AAAA,EAC1B;AAAA,EACA,OAAO,kBAAkB,OAAiC;AACtD,WAAO,cAAa,YAAY,KAAK;AAAA,EACzC;AACJ;AA1KIA,iBAAA;AADG,IAAM,eAAN;AA4KA,MAAM,iBAAN,MAAM,uBAAsB,KAAK,QAAQ;AAAA,EAE5C,YAAY,MAKN;AACF,UAAM;AAPV,uBAAAA,gBAA4B,CAAC,CAAC,CAAC,CAAC;AAQ5B,SAAK,QAAQ,WAAW,MAAM,MAAM,QAAQ,IAAI,IAAI,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,mBAAKA,eAAa;AAC5F,QAAI,CAAC,MAAM,QAAQ,IAAI,KAAK,OAAO,QAAQ,UAAU;AACjD,UAAI,YAAY,QAAQ,KAAK,UAAU,QAAW;AAC9C,aAAK,SAAS,KAAK;AAAA,MACvB;AACA,UAAI,cAAc,QAAQ,KAAK,YAAY,QAAW;AAClD,aAAK,WAAW,KAAK;AAAA,MACzB;AACA,UAAI,eAAe,QAAQ,KAAK,aAAa,QAAW;AACpD,aAAK,YAAY,KAAK;AAAA,MAC1B;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,IAAI,SAAS;AACT,WAAO,KAAK,QAAQ,oBAAoB,MAAM,GAAG,eAAc,OAAO,UAAU;AAAA,EACpF;AAAA,EACA,IAAI,OAAO,OAA6B;AACpC,SAAK,QAAQ,SAAS,MAAM,GAAG,KAAK;AAAA,EACxC;AAAA,EACA,IAAI,WAAW;AACX,WAAO,KAAK,QAAQ,oBAAoB,MAAM,GAAG,EAAE;AAAA,EACvD;AAAA,EACA,IAAI,SAAS,OAAe;AACxB,SAAK,QAAQ,cAAc,MAAM,GAAG,mBAAKA,gBAAc,CAAC,GAAG,KAAK;AAAA,EACpE;AAAA,EACA,IAAI,eAAe;AACf,WAAO,KAAK,QAAQ,SAAS,MAAM,CAAC,KAAK;AAAA,EAC7C;AAAA,EACA,IAAI,YAAY;AACZ,WAAO,KAAK,QAAQ,oBAAoB,MAAM,GAAG,EAAE;AAAA,EACvD;AAAA,EACA,IAAI,UAAU,OAAe;AACzB,SAAK,QAAQ,SAAS,MAAM,GAAG,KAAK;AAAA,EACxC;AAAA,EACA,IAAI,YAAY;AACZ,UAAM,QAEF;AAAA,MACA,GAAG;AAAA,MACH,GAAG;AAAA,IACP;AACA,WAAO,MAAM,KAAK,QAAQ,iBAAiB,MAAM,CAAC,CAAC,CAAC,CAAC;AAAA,EACzD;AAAA,EACA,OAAO,WAAW,MAIA;AACd,UAAM,UAAU,IAAI,eAAc,CAAC,CAAC;AACpC,QAAI,KAAK,UAAU,MAAM;AACrB,cAAQ,SAAS,KAAK;AAAA,IAC1B;AACA,QAAI,KAAK,YAAY,MAAM;AACvB,cAAQ,WAAW,KAAK;AAAA,IAC5B;AACA,QAAI,KAAK,aAAa,MAAM;AACxB,cAAQ,YAAY,KAAK;AAAA,IAC7B;AACA,WAAO;AAAA,EACX;AAAA,EACA,WAAW;AACP,UAAM,OAIF,CAAC;AACL,QAAI,KAAK,UAAU,MAAM;AACrB,WAAK,SAAS,KAAK;AAAA,IACvB;AACA,QAAI,KAAK,YAAY,MAAM;AACvB,WAAK,WAAW,KAAK;AAAA,IACzB;AACA,QAAI,KAAK,aAAa,MAAM;AACxB,WAAK,YAAY,KAAK;AAAA,IAC1B;AACA,WAAO;AAAA,EACX;AAAA,EAGA,UAAU,GAA0C;AAChD,UAAM,SAAS,KAAK,IAAI,KAAK,aAAa;AAC1C,QAAI,KAAK,UAAU,eAAc,OAAO;AACpC,aAAO,UAAU,GAAG,KAAK,MAAM;AACnC,QAAI,KAAK;AACL,aAAO,YAAY,GAAG,KAAK,QAAQ;AACvC,QAAI,KAAK,UAAU;AACf,aAAO,YAAY,GAAG,KAAK,SAAS;AACxC,QAAI,CAAC;AACD,aAAO,OAAO,gBAAgB;AAAA,EACtC;AAAA,EACA,OAAO,YAAY,OAAsD;AACrE,UAAM,SAAS,iBAAiB,KAAK,eAAe,QAAQ,IAAI,KAAK,aAAa,KAAK,GAAG,UAAU,IAAI,eAAc;AACtH,WAAO,OAAO,UAAU,GAAG;AACvB,UAAI,OAAO,WAAW;AAClB;AACJ,cAAQ,OAAO,eAAe,GAAG;AAAA,QAC7B,KAAK;AACD,kBAAQ,SAAS,OAAO,SAAS;AACjC;AAAA,QACJ,KAAK;AACD,kBAAQ,WAAW,OAAO,WAAW;AACrC;AAAA,QACJ,KAAK;AACD,kBAAQ,YAAY,OAAO,WAAW;AACtC;AAAA,QACJ;AAAS,iBAAO,UAAU;AAAA,MAC9B;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,kBAA8B;AAC1B,WAAO,KAAK,UAAU;AAAA,EAC1B;AAAA,EACA,OAAO,kBAAkB,OAAkC;AACvD,WAAO,eAAc,YAAY,KAAK;AAAA,EAC1C;AACJ;AA5HIA,iBAAA;AADG,IAAM,gBAAN;AAAA,CA8HA,CAAUC,mBAAV;AACI,MAAK;AAAL,IAAKC,YAAL;AACH,IAAAA,gBAAA,gBAAa,KAAb;AACA,IAAAA,gBAAA,cAAW,KAAX;AACA,IAAAA,gBAAA,mBAAgB,KAAhB;AACA,IAAAA,gBAAA,WAAQ,KAAR;AACA,IAAAA,gBAAA,iBAAc,KAAd;AAAA,KALQ,SAAAD,eAAA,WAAAA,eAAA;AAAA,GADC;AASV,MAAM,gBAAN,MAAM,sBAAqB,KAAK,QAAQ;AAAA,EAE3C,YAAY,MAAmB;AAC3B,UAAM;AAFV,uBAAAD,gBAA4B,CAAC;AAGzB,SAAK,QAAQ,WAAW,MAAM,MAAM,QAAQ,IAAI,IAAI,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,mBAAKA,eAAa;AAC5F,QAAI,CAAC,MAAM,QAAQ,IAAI,KAAK,OAAO,QAAQ,UAAU;AAAA,IAAE;AAAA,EAC3D;AAAA,EACA,OAAO,WAAW,MAAwB;AACtC,UAAM,UAAU,IAAI,cAAa,CAAC,CAAC;AACnC,WAAO;AAAA,EACX;AAAA,EACA,WAAW;AACP,UAAM,OAAW,CAAC;AAClB,WAAO;AAAA,EACX;AAAA,EAGA,UAAU,GAA0C;AAChD,UAAM,SAAS,KAAK,IAAI,KAAK,aAAa;AAC1C,QAAI,CAAC;AACD,aAAO,OAAO,gBAAgB;AAAA,EACtC;AAAA,EACA,OAAO,YAAY,OAAqD;AACpE,UAAM,SAAS,iBAAiB,KAAK,eAAe,QAAQ,IAAI,KAAK,aAAa,KAAK,GAAG,UAAU,IAAI,cAAa;AACrH,WAAO,OAAO,UAAU,GAAG;AACvB,UAAI,OAAO,WAAW;AAClB;AACJ,cAAQ,OAAO,eAAe,GAAG;AAAA,QAC7B;AAAS,iBAAO,UAAU;AAAA,MAC9B;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,kBAA8B;AAC1B,WAAO,KAAK,UAAU;AAAA,EAC1B;AAAA,EACA,OAAO,kBAAkB,OAAiC;AACtD,WAAO,cAAa,YAAY,KAAK;AAAA,EACzC;AACJ;AAtCIA,iBAAA;AADG,IAAM,eAAN;AAwCA,MAAM,mBAAN,MAAM,yBAAwB,KAAK,QAAQ;AAAA,EAE9C,YAAY,MAAmB;AAC3B,UAAM;AAFV,uBAAAA,gBAA4B,CAAC;AAGzB,SAAK,QAAQ,WAAW,MAAM,MAAM,QAAQ,IAAI,IAAI,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,mBAAKA,eAAa;AAC5F,QAAI,CAAC,MAAM,QAAQ,IAAI,KAAK,OAAO,QAAQ,UAAU;AAAA,IAAE;AAAA,EAC3D;AAAA,EACA,OAAO,WAAW,MAA2B;AACzC,UAAM,UAAU,IAAI,iBAAgB,CAAC,CAAC;AACtC,WAAO;AAAA,EACX;AAAA,EACA,WAAW;AACP,UAAM,OAAW,CAAC;AAClB,WAAO;AAAA,EACX;AAAA,EAGA,UAAU,GAA0C;AAChD,UAAM,SAAS,KAAK,IAAI,KAAK,aAAa;AAC1C,QAAI,CAAC;AACD,aAAO,OAAO,gBAAgB;AAAA,EACtC;AAAA,EACA,OAAO,YAAY,OAAwD;AACvE,UAAM,SAAS,iBAAiB,KAAK,eAAe,QAAQ,IAAI,KAAK,aAAa,KAAK,GAAG,UAAU,IAAI,iBAAgB;AACxH,WAAO,OAAO,UAAU,GAAG;AACvB,UAAI,OAAO,WAAW;AAClB;AACJ,cAAQ,OAAO,eAAe,GAAG;AAAA,QAC7B;AAAS,iBAAO,UAAU;AAAA,MAC9B;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,kBAA8B;AAC1B,WAAO,KAAK,UAAU;AAAA,EAC1B;AAAA,EACA,OAAO,kBAAkB,OAAoC;AACzD,WAAO,iBAAgB,YAAY,KAAK;AAAA,EAC5C;AACJ;AAtCIA,iBAAA;AADG,IAAM,kBAAN;AAwCA,MAAM,mBAAN,MAAM,yBAAwB,KAAK,QAAQ;AAAA,EAE9C,YAAY,MAGT;AACC,UAAM;AALV,uBAAAA,gBAA4B,CAAC;AAMzB,SAAK,QAAQ,WAAW,MAAM,MAAM,QAAQ,IAAI,IAAI,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,mBAAKA,eAAa;AAC5F,QAAI,CAAC,MAAM,QAAQ,IAAI,KAAK,OAAO,QAAQ,UAAU;AACjD,UAAI,gBAAgB,QAAQ,KAAK,cAAc,QAAW;AACtD,aAAK,aAAa,KAAK;AAAA,MAC3B;AACA,UAAI,cAAc,QAAQ,KAAK,YAAY,QAAW;AAClD,aAAK,WAAW,KAAK;AAAA,MACzB;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,IAAI,aAAa;AACb,WAAO,KAAK,QAAQ,oBAAoB,MAAM,GAAG,EAAE;AAAA,EACvD;AAAA,EACA,IAAI,WAAW,OAAe;AAC1B,SAAK,QAAQ,SAAS,MAAM,GAAG,KAAK;AAAA,EACxC;AAAA,EACA,IAAI,WAAW;AACX,WAAO,KAAK,QAAQ,oBAAoB,MAAM,GAAG,EAAE;AAAA,EACvD;AAAA,EACA,IAAI,SAAS,OAAe;AACxB,SAAK,QAAQ,SAAS,MAAM,GAAG,KAAK;AAAA,EACxC;AAAA,EACA,OAAO,WAAW,MAGE;AAChB,UAAM,UAAU,IAAI,iBAAgB,CAAC,CAAC;AACtC,QAAI,KAAK,cAAc,MAAM;AACzB,cAAQ,aAAa,KAAK;AAAA,IAC9B;AACA,QAAI,KAAK,YAAY,MAAM;AACvB,cAAQ,WAAW,KAAK;AAAA,IAC5B;AACA,WAAO;AAAA,EACX;AAAA,EACA,WAAW;AACP,UAAM,OAGF,CAAC;AACL,QAAI,KAAK,cAAc,MAAM;AACzB,WAAK,aAAa,KAAK;AAAA,IAC3B;AACA,QAAI,KAAK,YAAY,MAAM;AACvB,WAAK,WAAW,KAAK;AAAA,IACzB;AACA,WAAO;AAAA,EACX;AAAA,EAGA,UAAU,GAA0C;AAChD,UAAM,SAAS,KAAK,IAAI,KAAK,aAAa;AAC1C,QAAI,KAAK,WAAW;AAChB,aAAO,YAAY,GAAG,KAAK,UAAU;AACzC,QAAI,KAAK,SAAS;AACd,aAAO,YAAY,GAAG,KAAK,QAAQ;AACvC,QAAI,CAAC;AACD,aAAO,OAAO,gBAAgB;AAAA,EACtC;AAAA,EACA,OAAO,YAAY,OAAwD;AACvE,UAAM,SAAS,iBAAiB,KAAK,eAAe,QAAQ,IAAI,KAAK,aAAa,KAAK,GAAG,UAAU,IAAI,iBAAgB;AACxH,WAAO,OAAO,UAAU,GAAG;AACvB,UAAI,OAAO,WAAW;AAClB;AACJ,cAAQ,OAAO,eAAe,GAAG;AAAA,QAC7B,KAAK;AACD,kBAAQ,aAAa,OAAO,WAAW;AACvC;AAAA,QACJ,KAAK;AACD,kBAAQ,WAAW,OAAO,WAAW;AACrC;AAAA,QACJ;AAAS,iBAAO,UAAU;AAAA,MAC9B;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,kBAA8B;AAC1B,WAAO,KAAK,UAAU;AAAA,EAC1B;AAAA,EACA,OAAO,kBAAkB,OAAoC;AACzD,WAAO,iBAAgB,YAAY,KAAK;AAAA,EAC5C;AACJ;AAxFIA,iBAAA;AADG,IAAM,kBAAN;AA0FA,MAAM,oBAAN,MAAM,0BAAyB,KAAK,QAAQ;AAAA,EAE/C,YAAY,MAIN;AACF,UAAM;AANV,uBAAAA,gBAA4B,CAAC,CAAC,CAAC,CAAC;AAO5B,SAAK,QAAQ,WAAW,MAAM,MAAM,QAAQ,IAAI,IAAI,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,mBAAKA,eAAa;AAC5F,QAAI,CAAC,MAAM,QAAQ,IAAI,KAAK,OAAO,QAAQ,UAAU;AACjD,UAAI,YAAY,QAAQ,KAAK,UAAU,QAAW;AAC9C,aAAK,SAAS,KAAK;AAAA,MACvB;AACA,UAAI,SAAS,QAAQ,KAAK,OAAO,QAAW;AACxC,aAAK,MAAM,KAAK;AAAA,MACpB;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,IAAI,SAAS;AACT,WAAO,KAAK,QAAQ,oBAAoB,MAAM,GAAG,kBAAiB,OAAO,QAAQ;AAAA,EACrF;AAAA,EACA,IAAI,OAAO,OAAgC;AACvC,SAAK,QAAQ,SAAS,MAAM,GAAG,KAAK;AAAA,EACxC;AAAA,EACA,IAAI,MAAM;AACN,WAAO,KAAK,QAAQ,oBAAoB,MAAM,GAAG,EAAE;AAAA,EACvD;AAAA,EACA,IAAI,IAAI,OAAe;AACnB,SAAK,QAAQ,cAAc,MAAM,GAAG,mBAAKA,gBAAc,CAAC,GAAG,KAAK;AAAA,EACpE;AAAA,EACA,IAAI,UAAU;AACV,WAAO,KAAK,QAAQ,SAAS,MAAM,CAAC,KAAK;AAAA,EAC7C;AAAA,EACA,IAAI,OAAO;AACP,UAAM,QAEF;AAAA,MACA,GAAG;AAAA,MACH,GAAG;AAAA,IACP;AACA,WAAO,MAAM,KAAK,QAAQ,iBAAiB,MAAM,CAAC,CAAC,CAAC,CAAC;AAAA,EACzD;AAAA,EACA,OAAO,WAAW,MAGG;AACjB,UAAM,UAAU,IAAI,kBAAiB,CAAC,CAAC;AACvC,QAAI,KAAK,UAAU,MAAM;AACrB,cAAQ,SAAS,KAAK;AAAA,IAC1B;AACA,QAAI,KAAK,OAAO,MAAM;AAClB,cAAQ,MAAM,KAAK;AAAA,IACvB;AACA,WAAO;AAAA,EACX;AAAA,EACA,WAAW;AACP,UAAM,OAGF,CAAC;AACL,QAAI,KAAK,UAAU,MAAM;AACrB,WAAK,SAAS,KAAK;AAAA,IACvB;AACA,QAAI,KAAK,OAAO,MAAM;AAClB,WAAK,MAAM,KAAK;AAAA,IACpB;AACA,WAAO;AAAA,EACX;AAAA,EAGA,UAAU,GAA0C;AAChD,UAAM,SAAS,KAAK,IAAI,KAAK,aAAa;AAC1C,QAAI,KAAK,UAAU,kBAAiB,OAAO;AACvC,aAAO,UAAU,GAAG,KAAK,MAAM;AACnC,QAAI,KAAK;AACL,aAAO,YAAY,GAAG,KAAK,GAAG;AAClC,QAAI,CAAC;AACD,aAAO,OAAO,gBAAgB;AAAA,EACtC;AAAA,EACA,OAAO,YAAY,OAAyD;AACxE,UAAM,SAAS,iBAAiB,KAAK,eAAe,QAAQ,IAAI,KAAK,aAAa,KAAK,GAAG,UAAU,IAAI,kBAAiB;AACzH,WAAO,OAAO,UAAU,GAAG;AACvB,UAAI,OAAO,WAAW;AAClB;AACJ,cAAQ,OAAO,eAAe,GAAG;AAAA,QAC7B,KAAK;AACD,kBAAQ,SAAS,OAAO,SAAS;AACjC;AAAA,QACJ,KAAK;AACD,kBAAQ,MAAM,OAAO,WAAW;AAChC;AAAA,QACJ;AAAS,iBAAO,UAAU;AAAA,MAC9B;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,kBAA8B;AAC1B,WAAO,KAAK,UAAU;AAAA,EAC1B;AAAA,EACA,OAAO,kBAAkB,OAAqC;AAC1D,WAAO,kBAAiB,YAAY,KAAK;AAAA,EAC7C;AACJ;AArGIA,iBAAA;AADG,IAAM,mBAAN;AAAA,CAuGA,CAAUG,sBAAV;AACI,MAAK;AAAL,IAAKD,YAAL;AACH,IAAAA,gBAAA,cAAW,KAAX;AACA,IAAAA,gBAAA,aAAU,KAAV;AAAA,KAFQ,SAAAC,kBAAA,WAAAA,kBAAA;AAAA,GADC;AA8BV,MAAe,0BAA0B;AAkChD;AAlCsB,0BACX,aAAa;AAAA,EAChB,oBAAoB;AAAA,IAChB,MAAM;AAAA,IACN,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,kBAAkB,CAAC,YAAkC,OAAO,KAAK,QAAQ,UAAU,CAAC;AAAA,IACpF,oBAAoB,CAAC,UAAkB,qBAAqB,YAAY,IAAI,WAAW,KAAK,CAAC;AAAA,IAC7F,mBAAmB,CAAC,YAAmC,OAAO,KAAK,QAAQ,UAAU,CAAC;AAAA,IACtF,qBAAqB,CAAC,UAAkB,sBAAsB,YAAY,IAAI,WAAW,KAAK,CAAC;AAAA,EACnG;AAAA,EACA,OAAO;AAAA,IACH,MAAM;AAAA,IACN,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,kBAAkB,CAAC,YAA0B,OAAO,KAAK,QAAQ,UAAU,CAAC;AAAA,IAC5E,oBAAoB,CAAC,UAAkB,aAAa,YAAY,IAAI,WAAW,KAAK,CAAC;AAAA,IACrF,mBAAmB,CAAC,YAA2B,OAAO,KAAK,QAAQ,UAAU,CAAC;AAAA,IAC9E,qBAAqB,CAAC,UAAkB,cAAc,YAAY,IAAI,WAAW,KAAK,CAAC;AAAA,EAC3F;AAAA,EACA,iBAAiB;AAAA,IACb,MAAM;AAAA,IACN,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,kBAAkB,CAAC,YAA6B,OAAO,KAAK,QAAQ,UAAU,CAAC;AAAA,IAC/E,oBAAoB,CAAC,UAAkB,gBAAgB,YAAY,IAAI,WAAW,KAAK,CAAC;AAAA,IACxF,mBAAmB,CAAC,YAA8B,OAAO,KAAK,QAAQ,UAAU,CAAC;AAAA,IACjF,qBAAqB,CAAC,UAAkB,iBAAiB,YAAY,IAAI,WAAW,KAAK,CAAC;AAAA,EAC9F;AACJ;AAMG,MAAM,oBAAoB,OAAO,6BAA6B,0BAA0B,YAAY,SAAS,CAAC,CAAC,EAAE;AAAA,EACpH,YAAY,SAAiB,aAAwC,SAA0C;AAC3G,UAAM,SAAS,aAAa,OAAO;AAEvC,8BAA6F,CAAC,SAA+B,UAAgG,SAA8E,aAAqF;AAC5X,aAAO,MAAM,mBAAmB,SAAS,UAAU,SAAS,QAAQ;AAAA,IACxE;AACA,iBAAgE,CAAC,SAAuB,UAAwF,SAAsE,aAA6E;AAC/T,aAAO,MAAM,MAAM,SAAS,UAAU,SAAS,QAAQ;AAAA,IAC3D;AACA,2BAAgF,CAAC,SAA0B,UAA2F,SAAyE,aAAgF;AAC3V,aAAO,MAAM,gBAAgB,SAAS,UAAU,SAAS,QAAQ;AAAA,IACrE;AAAA,EATA;AAUJ;",
  "names": ["_one_of_decls", "LoginResponse", "Status", "ApprovalResponse"]
}
