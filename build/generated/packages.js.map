{
  "version": 3,
  "sources": ["../../src/generated/packages.ts"],
  "sourcesContent": ["/**\n * Generated by the protoc-gen-ts.  DO NOT EDIT!\n * compiler version: 5.28.3\n * source: packages.proto\n * git: https://github.com/thesayyn/protoc-gen-ts */\nimport * as pb_1 from \"google-protobuf\";\nexport enum PackageType {\n    firstPing = 0\n}\nexport class Package extends pb_1.Message {\n    #one_of_decls: number[][] = [];\n    constructor(data?: any[] | {\n        type?: PackageType;\n    }) {\n        super();\n        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n        if (!Array.isArray(data) && typeof data == \"object\") {\n            if (\"type\" in data && data.type != undefined) {\n                this.type = data.type;\n            }\n        }\n    }\n    get type() {\n        return pb_1.Message.getFieldWithDefault(this, 1, PackageType.firstPing) as PackageType;\n    }\n    set type(value: PackageType) {\n        pb_1.Message.setField(this, 1, value);\n    }\n    static fromObject(data: {\n        type?: PackageType;\n    }): Package {\n        const message = new Package({});\n        if (data.type != null) {\n            message.type = data.type;\n        }\n        return message;\n    }\n    toObject() {\n        const data: {\n            type?: PackageType;\n        } = {};\n        if (this.type != null) {\n            data.type = this.type;\n        }\n        return data;\n    }\n    serialize(): Uint8Array;\n    serialize(w: pb_1.BinaryWriter): void;\n    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n        const writer = w || new pb_1.BinaryWriter();\n        if (this.type != PackageType.firstPing)\n            writer.writeEnum(1, this.type);\n        if (!w)\n            return writer.getResultBuffer();\n    }\n    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Package {\n        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Package();\n        while (reader.nextField()) {\n            if (reader.isEndGroup())\n                break;\n            switch (reader.getFieldNumber()) {\n                case 1:\n                    message.type = reader.readEnum();\n                    break;\n                default: reader.skipField();\n            }\n        }\n        return message;\n    }\n    serializeBinary(): Uint8Array {\n        return this.serialize();\n    }\n    static deserializeBinary(bytes: Uint8Array): Package {\n        return Package.deserialize(bytes);\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,WAAsB;AALtB;AAMO,IAAK,cAAL,kBAAKA,iBAAL;AACH,EAAAA,0BAAA,eAAY,KAAZ;AADQ,SAAAA;AAAA,GAAA;AAGL,MAAM,WAAN,MAAM,iBAAgB,KAAK,QAAQ;AAAA,EAEtC,YAAY,MAET;AACC,UAAM;AAJV,sCAA4B,CAAC;AAKzB,SAAK,QAAQ,WAAW,MAAM,MAAM,QAAQ,IAAI,IAAI,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,mBAAK,cAAa;AAC5F,QAAI,CAAC,MAAM,QAAQ,IAAI,KAAK,OAAO,QAAQ,UAAU;AACjD,UAAI,UAAU,QAAQ,KAAK,QAAQ,QAAW;AAC1C,aAAK,OAAO,KAAK;AAAA,MACrB;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,IAAI,OAAO;AACP,WAAO,KAAK,QAAQ,oBAAoB,MAAM,GAAG,iBAAqB;AAAA,EAC1E;AAAA,EACA,IAAI,KAAK,OAAoB;AACzB,SAAK,QAAQ,SAAS,MAAM,GAAG,KAAK;AAAA,EACxC;AAAA,EACA,OAAO,WAAW,MAEN;AACR,UAAM,UAAU,IAAI,SAAQ,CAAC,CAAC;AAC9B,QAAI,KAAK,QAAQ,MAAM;AACnB,cAAQ,OAAO,KAAK;AAAA,IACxB;AACA,WAAO;AAAA,EACX;AAAA,EACA,WAAW;AACP,UAAM,OAEF,CAAC;AACL,QAAI,KAAK,QAAQ,MAAM;AACnB,WAAK,OAAO,KAAK;AAAA,IACrB;AACA,WAAO;AAAA,EACX;AAAA,EAGA,UAAU,GAA0C;AAChD,UAAM,SAAS,KAAK,IAAI,KAAK,aAAa;AAC1C,QAAI,KAAK,QAAQ;AACb,aAAO,UAAU,GAAG,KAAK,IAAI;AACjC,QAAI,CAAC;AACD,aAAO,OAAO,gBAAgB;AAAA,EACtC;AAAA,EACA,OAAO,YAAY,OAAgD;AAC/D,UAAM,SAAS,iBAAiB,KAAK,eAAe,QAAQ,IAAI,KAAK,aAAa,KAAK,GAAG,UAAU,IAAI,SAAQ;AAChH,WAAO,OAAO,UAAU,GAAG;AACvB,UAAI,OAAO,WAAW;AAClB;AACJ,cAAQ,OAAO,eAAe,GAAG;AAAA,QAC7B,KAAK;AACD,kBAAQ,OAAO,OAAO,SAAS;AAC/B;AAAA,QACJ;AAAS,iBAAO,UAAU;AAAA,MAC9B;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,kBAA8B;AAC1B,WAAO,KAAK,UAAU;AAAA,EAC1B;AAAA,EACA,OAAO,kBAAkB,OAA4B;AACjD,WAAO,SAAQ,YAAY,KAAK;AAAA,EACpC;AACJ;AAjEI;AADG,IAAM,UAAN;",
  "names": ["PackageType"]
}
