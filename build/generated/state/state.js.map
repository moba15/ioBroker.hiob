{
  "version": 3,
  "sources": ["../../../src/generated/state/state.ts"],
  "sourcesContent": ["/**\n * Generated by the protoc-gen-ts.  DO NOT EDIT!\n * compiler version: 5.28.3\n * source: state/state.proto\n * git: https://github.com/thesayyn/protoc-gen-ts */\nimport * as pb_1 from \"google-protobuf\";\nimport * as grpc_1 from \"@grpc/grpc-js\";\nexport class StatesValueUpdate extends pb_1.Message {\n    #one_of_decls: number[][] = [];\n    constructor(data?: any[] | {\n        stateUpdates?: StateValueUpdate[];\n    }) {\n        super();\n        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], this.#one_of_decls);\n        if (!Array.isArray(data) && typeof data == \"object\") {\n            if (\"stateUpdates\" in data && data.stateUpdates != undefined) {\n                this.stateUpdates = data.stateUpdates;\n            }\n        }\n    }\n    get stateUpdates() {\n        return pb_1.Message.getRepeatedWrapperField(this, StateValueUpdate, 2) as StateValueUpdate[];\n    }\n    set stateUpdates(value: StateValueUpdate[]) {\n        pb_1.Message.setRepeatedWrapperField(this, 2, value);\n    }\n    static fromObject(data: {\n        stateUpdates?: ReturnType<typeof StateValueUpdate.prototype.toObject>[];\n    }): StatesValueUpdate {\n        const message = new StatesValueUpdate({});\n        if (data.stateUpdates != null) {\n            message.stateUpdates = data.stateUpdates.map(item => StateValueUpdate.fromObject(item));\n        }\n        return message;\n    }\n    toObject() {\n        const data: {\n            stateUpdates?: ReturnType<typeof StateValueUpdate.prototype.toObject>[];\n        } = {};\n        if (this.stateUpdates != null) {\n            data.stateUpdates = this.stateUpdates.map((item: StateValueUpdate) => item.toObject());\n        }\n        return data;\n    }\n    serialize(): Uint8Array;\n    serialize(w: pb_1.BinaryWriter): void;\n    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n        const writer = w || new pb_1.BinaryWriter();\n        if (this.stateUpdates.length)\n            writer.writeRepeatedMessage(2, this.stateUpdates, (item: StateValueUpdate) => item.serialize(writer));\n        if (!w)\n            return writer.getResultBuffer();\n    }\n    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): StatesValueUpdate {\n        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new StatesValueUpdate();\n        while (reader.nextField()) {\n            if (reader.isEndGroup())\n                break;\n            switch (reader.getFieldNumber()) {\n                case 2:\n                    reader.readMessage(message.stateUpdates, () => pb_1.Message.addToRepeatedWrapperField(message, 2, StateValueUpdate.deserialize(reader), StateValueUpdate));\n                    break;\n                default: reader.skipField();\n            }\n        }\n        return message;\n    }\n    serializeBinary(): Uint8Array {\n        return this.serialize();\n    }\n    static deserializeBinary(bytes: Uint8Array): StatesValueUpdate {\n        return StatesValueUpdate.deserialize(bytes);\n    }\n}\nexport class StateValueUpdate extends pb_1.Message {\n    #one_of_decls: number[][] = [[4, 5, 6, 99]];\n    constructor(data?: any[] | ({\n        stateId?: string;\n        acc?: boolean;\n        time?: number;\n    } & (({\n        stringValue?: string;\n        boolValue?: never;\n        doubleValue?: never;\n        other?: never;\n    } | {\n        stringValue?: never;\n        boolValue?: boolean;\n        doubleValue?: never;\n        other?: never;\n    } | {\n        stringValue?: never;\n        boolValue?: never;\n        doubleValue?: number;\n        other?: never;\n    } | {\n        stringValue?: never;\n        boolValue?: never;\n        doubleValue?: never;\n        other?: string;\n    })))) {\n        super();\n        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n        if (!Array.isArray(data) && typeof data == \"object\") {\n            if (\"stateId\" in data && data.stateId != undefined) {\n                this.stateId = data.stateId;\n            }\n            if (\"acc\" in data && data.acc != undefined) {\n                this.acc = data.acc;\n            }\n            if (\"time\" in data && data.time != undefined) {\n                this.time = data.time;\n            }\n            if (\"stringValue\" in data && data.stringValue != undefined) {\n                this.stringValue = data.stringValue;\n            }\n            if (\"boolValue\" in data && data.boolValue != undefined) {\n                this.boolValue = data.boolValue;\n            }\n            if (\"doubleValue\" in data && data.doubleValue != undefined) {\n                this.doubleValue = data.doubleValue;\n            }\n            if (\"other\" in data && data.other != undefined) {\n                this.other = data.other;\n            }\n        }\n    }\n    get stateId() {\n        return pb_1.Message.getFieldWithDefault(this, 1, \"\") as string;\n    }\n    set stateId(value: string) {\n        pb_1.Message.setField(this, 1, value);\n    }\n    get acc() {\n        return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;\n    }\n    set acc(value: boolean) {\n        pb_1.Message.setField(this, 2, value);\n    }\n    get time() {\n        return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;\n    }\n    set time(value: number) {\n        pb_1.Message.setField(this, 3, value);\n    }\n    get stringValue() {\n        return pb_1.Message.getFieldWithDefault(this, 4, \"\") as string;\n    }\n    set stringValue(value: string) {\n        pb_1.Message.setOneofField(this, 4, this.#one_of_decls[0], value);\n    }\n    get has_stringValue() {\n        return pb_1.Message.getField(this, 4) != null;\n    }\n    get boolValue() {\n        return pb_1.Message.getFieldWithDefault(this, 5, false) as boolean;\n    }\n    set boolValue(value: boolean) {\n        pb_1.Message.setOneofField(this, 5, this.#one_of_decls[0], value);\n    }\n    get has_boolValue() {\n        return pb_1.Message.getField(this, 5) != null;\n    }\n    get doubleValue() {\n        return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;\n    }\n    set doubleValue(value: number) {\n        pb_1.Message.setOneofField(this, 6, this.#one_of_decls[0], value);\n    }\n    get has_doubleValue() {\n        return pb_1.Message.getField(this, 6) != null;\n    }\n    get other() {\n        return pb_1.Message.getFieldWithDefault(this, 99, \"\") as string;\n    }\n    set other(value: string) {\n        pb_1.Message.setOneofField(this, 99, this.#one_of_decls[0], value);\n    }\n    get has_other() {\n        return pb_1.Message.getField(this, 99) != null;\n    }\n    get value() {\n        const cases: {\n            [index: number]: \"none\" | \"stringValue\" | \"boolValue\" | \"doubleValue\" | \"other\";\n        } = {\n            0: \"none\",\n            4: \"stringValue\",\n            5: \"boolValue\",\n            6: \"doubleValue\",\n            99: \"other\"\n        };\n        return cases[pb_1.Message.computeOneofCase(this, [4, 5, 6, 99])];\n    }\n    static fromObject(data: {\n        stateId?: string;\n        acc?: boolean;\n        time?: number;\n        stringValue?: string;\n        boolValue?: boolean;\n        doubleValue?: number;\n        other?: string;\n    }): StateValueUpdate {\n        const message = new StateValueUpdate({});\n        if (data.stateId != null) {\n            message.stateId = data.stateId;\n        }\n        if (data.acc != null) {\n            message.acc = data.acc;\n        }\n        if (data.time != null) {\n            message.time = data.time;\n        }\n        if (data.stringValue != null) {\n            message.stringValue = data.stringValue;\n        }\n        if (data.boolValue != null) {\n            message.boolValue = data.boolValue;\n        }\n        if (data.doubleValue != null) {\n            message.doubleValue = data.doubleValue;\n        }\n        if (data.other != null) {\n            message.other = data.other;\n        }\n        return message;\n    }\n    toObject() {\n        const data: {\n            stateId?: string;\n            acc?: boolean;\n            time?: number;\n            stringValue?: string;\n            boolValue?: boolean;\n            doubleValue?: number;\n            other?: string;\n        } = {};\n        if (this.stateId != null) {\n            data.stateId = this.stateId;\n        }\n        if (this.acc != null) {\n            data.acc = this.acc;\n        }\n        if (this.time != null) {\n            data.time = this.time;\n        }\n        if (this.stringValue != null) {\n            data.stringValue = this.stringValue;\n        }\n        if (this.boolValue != null) {\n            data.boolValue = this.boolValue;\n        }\n        if (this.doubleValue != null) {\n            data.doubleValue = this.doubleValue;\n        }\n        if (this.other != null) {\n            data.other = this.other;\n        }\n        return data;\n    }\n    serialize(): Uint8Array;\n    serialize(w: pb_1.BinaryWriter): void;\n    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n        const writer = w || new pb_1.BinaryWriter();\n        if (this.stateId.length)\n            writer.writeString(1, this.stateId);\n        if (this.acc != false)\n            writer.writeBool(2, this.acc);\n        if (this.time != 0)\n            writer.writeUint64(3, this.time);\n        if (this.has_stringValue)\n            writer.writeString(4, this.stringValue);\n        if (this.has_boolValue)\n            writer.writeBool(5, this.boolValue);\n        if (this.has_doubleValue)\n            writer.writeDouble(6, this.doubleValue);\n        if (this.has_other)\n            writer.writeString(99, this.other);\n        if (!w)\n            return writer.getResultBuffer();\n    }\n    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): StateValueUpdate {\n        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new StateValueUpdate();\n        while (reader.nextField()) {\n            if (reader.isEndGroup())\n                break;\n            switch (reader.getFieldNumber()) {\n                case 1:\n                    message.stateId = reader.readString();\n                    break;\n                case 2:\n                    message.acc = reader.readBool();\n                    break;\n                case 3:\n                    message.time = reader.readUint64();\n                    break;\n                case 4:\n                    message.stringValue = reader.readString();\n                    break;\n                case 5:\n                    message.boolValue = reader.readBool();\n                    break;\n                case 6:\n                    message.doubleValue = reader.readDouble();\n                    break;\n                case 99:\n                    message.other = reader.readString();\n                    break;\n                default: reader.skipField();\n            }\n        }\n        return message;\n    }\n    serializeBinary(): Uint8Array {\n        return this.serialize();\n    }\n    static deserializeBinary(bytes: Uint8Array): StateValueUpdate {\n        return StateValueUpdate.deserialize(bytes);\n    }\n}\nexport class StateValueUpdateRequest extends pb_1.Message {\n    #one_of_decls: number[][] = [[3, 4, 5, 99]];\n    constructor(data?: any[] | ({\n        userId?: string;\n        stateId?: string;\n    } & (({\n        stringValue?: string;\n        boolValue?: never;\n        doubleValue?: never;\n        other?: never;\n    } | {\n        stringValue?: never;\n        boolValue?: boolean;\n        doubleValue?: never;\n        other?: never;\n    } | {\n        stringValue?: never;\n        boolValue?: never;\n        doubleValue?: number;\n        other?: never;\n    } | {\n        stringValue?: never;\n        boolValue?: never;\n        doubleValue?: never;\n        other?: string;\n    })))) {\n        super();\n        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n        if (!Array.isArray(data) && typeof data == \"object\") {\n            if (\"userId\" in data && data.userId != undefined) {\n                this.userId = data.userId;\n            }\n            if (\"stateId\" in data && data.stateId != undefined) {\n                this.stateId = data.stateId;\n            }\n            if (\"stringValue\" in data && data.stringValue != undefined) {\n                this.stringValue = data.stringValue;\n            }\n            if (\"boolValue\" in data && data.boolValue != undefined) {\n                this.boolValue = data.boolValue;\n            }\n            if (\"doubleValue\" in data && data.doubleValue != undefined) {\n                this.doubleValue = data.doubleValue;\n            }\n            if (\"other\" in data && data.other != undefined) {\n                this.other = data.other;\n            }\n        }\n    }\n    get userId() {\n        return pb_1.Message.getFieldWithDefault(this, 1, \"\") as string;\n    }\n    set userId(value: string) {\n        pb_1.Message.setField(this, 1, value);\n    }\n    get stateId() {\n        return pb_1.Message.getFieldWithDefault(this, 2, \"\") as string;\n    }\n    set stateId(value: string) {\n        pb_1.Message.setField(this, 2, value);\n    }\n    get stringValue() {\n        return pb_1.Message.getFieldWithDefault(this, 3, \"\") as string;\n    }\n    set stringValue(value: string) {\n        pb_1.Message.setOneofField(this, 3, this.#one_of_decls[0], value);\n    }\n    get has_stringValue() {\n        return pb_1.Message.getField(this, 3) != null;\n    }\n    get boolValue() {\n        return pb_1.Message.getFieldWithDefault(this, 4, false) as boolean;\n    }\n    set boolValue(value: boolean) {\n        pb_1.Message.setOneofField(this, 4, this.#one_of_decls[0], value);\n    }\n    get has_boolValue() {\n        return pb_1.Message.getField(this, 4) != null;\n    }\n    get doubleValue() {\n        return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;\n    }\n    set doubleValue(value: number) {\n        pb_1.Message.setOneofField(this, 5, this.#one_of_decls[0], value);\n    }\n    get has_doubleValue() {\n        return pb_1.Message.getField(this, 5) != null;\n    }\n    get other() {\n        return pb_1.Message.getFieldWithDefault(this, 99, \"\") as string;\n    }\n    set other(value: string) {\n        pb_1.Message.setOneofField(this, 99, this.#one_of_decls[0], value);\n    }\n    get has_other() {\n        return pb_1.Message.getField(this, 99) != null;\n    }\n    get value() {\n        const cases: {\n            [index: number]: \"none\" | \"stringValue\" | \"boolValue\" | \"doubleValue\" | \"other\";\n        } = {\n            0: \"none\",\n            3: \"stringValue\",\n            4: \"boolValue\",\n            5: \"doubleValue\",\n            99: \"other\"\n        };\n        return cases[pb_1.Message.computeOneofCase(this, [3, 4, 5, 99])];\n    }\n    static fromObject(data: {\n        userId?: string;\n        stateId?: string;\n        stringValue?: string;\n        boolValue?: boolean;\n        doubleValue?: number;\n        other?: string;\n    }): StateValueUpdateRequest {\n        const message = new StateValueUpdateRequest({});\n        if (data.userId != null) {\n            message.userId = data.userId;\n        }\n        if (data.stateId != null) {\n            message.stateId = data.stateId;\n        }\n        if (data.stringValue != null) {\n            message.stringValue = data.stringValue;\n        }\n        if (data.boolValue != null) {\n            message.boolValue = data.boolValue;\n        }\n        if (data.doubleValue != null) {\n            message.doubleValue = data.doubleValue;\n        }\n        if (data.other != null) {\n            message.other = data.other;\n        }\n        return message;\n    }\n    toObject() {\n        const data: {\n            userId?: string;\n            stateId?: string;\n            stringValue?: string;\n            boolValue?: boolean;\n            doubleValue?: number;\n            other?: string;\n        } = {};\n        if (this.userId != null) {\n            data.userId = this.userId;\n        }\n        if (this.stateId != null) {\n            data.stateId = this.stateId;\n        }\n        if (this.stringValue != null) {\n            data.stringValue = this.stringValue;\n        }\n        if (this.boolValue != null) {\n            data.boolValue = this.boolValue;\n        }\n        if (this.doubleValue != null) {\n            data.doubleValue = this.doubleValue;\n        }\n        if (this.other != null) {\n            data.other = this.other;\n        }\n        return data;\n    }\n    serialize(): Uint8Array;\n    serialize(w: pb_1.BinaryWriter): void;\n    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n        const writer = w || new pb_1.BinaryWriter();\n        if (this.userId.length)\n            writer.writeString(1, this.userId);\n        if (this.stateId.length)\n            writer.writeString(2, this.stateId);\n        if (this.has_stringValue)\n            writer.writeString(3, this.stringValue);\n        if (this.has_boolValue)\n            writer.writeBool(4, this.boolValue);\n        if (this.has_doubleValue)\n            writer.writeDouble(5, this.doubleValue);\n        if (this.has_other)\n            writer.writeString(99, this.other);\n        if (!w)\n            return writer.getResultBuffer();\n    }\n    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): StateValueUpdateRequest {\n        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new StateValueUpdateRequest();\n        while (reader.nextField()) {\n            if (reader.isEndGroup())\n                break;\n            switch (reader.getFieldNumber()) {\n                case 1:\n                    message.userId = reader.readString();\n                    break;\n                case 2:\n                    message.stateId = reader.readString();\n                    break;\n                case 3:\n                    message.stringValue = reader.readString();\n                    break;\n                case 4:\n                    message.boolValue = reader.readBool();\n                    break;\n                case 5:\n                    message.doubleValue = reader.readDouble();\n                    break;\n                case 99:\n                    message.other = reader.readString();\n                    break;\n                default: reader.skipField();\n            }\n        }\n        return message;\n    }\n    serializeBinary(): Uint8Array {\n        return this.serialize();\n    }\n    static deserializeBinary(bytes: Uint8Array): StateValueUpdateRequest {\n        return StateValueUpdateRequest.deserialize(bytes);\n    }\n}\nexport class StateValueUpdateResponse extends pb_1.Message {\n    #one_of_decls: number[][] = [];\n    constructor(data?: any[] | {\n        suc?: boolean;\n    }) {\n        super();\n        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n        if (!Array.isArray(data) && typeof data == \"object\") {\n            if (\"suc\" in data && data.suc != undefined) {\n                this.suc = data.suc;\n            }\n        }\n    }\n    get suc() {\n        return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;\n    }\n    set suc(value: boolean) {\n        pb_1.Message.setField(this, 1, value);\n    }\n    static fromObject(data: {\n        suc?: boolean;\n    }): StateValueUpdateResponse {\n        const message = new StateValueUpdateResponse({});\n        if (data.suc != null) {\n            message.suc = data.suc;\n        }\n        return message;\n    }\n    toObject() {\n        const data: {\n            suc?: boolean;\n        } = {};\n        if (this.suc != null) {\n            data.suc = this.suc;\n        }\n        return data;\n    }\n    serialize(): Uint8Array;\n    serialize(w: pb_1.BinaryWriter): void;\n    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n        const writer = w || new pb_1.BinaryWriter();\n        if (this.suc != false)\n            writer.writeBool(1, this.suc);\n        if (!w)\n            return writer.getResultBuffer();\n    }\n    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): StateValueUpdateResponse {\n        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new StateValueUpdateResponse();\n        while (reader.nextField()) {\n            if (reader.isEndGroup())\n                break;\n            switch (reader.getFieldNumber()) {\n                case 1:\n                    message.suc = reader.readBool();\n                    break;\n                default: reader.skipField();\n            }\n        }\n        return message;\n    }\n    serializeBinary(): Uint8Array {\n        return this.serialize();\n    }\n    static deserializeBinary(bytes: Uint8Array): StateValueUpdateResponse {\n        return StateValueUpdateResponse.deserialize(bytes);\n    }\n}\nexport class StateSubscribtion extends pb_1.Message {\n    #one_of_decls: number[][] = [];\n    constructor(data?: any[] | {\n        type?: StateSubscribtion.SubscriptionType;\n        stateIds?: string[];\n    }) {\n        super();\n        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], this.#one_of_decls);\n        if (!Array.isArray(data) && typeof data == \"object\") {\n            if (\"type\" in data && data.type != undefined) {\n                this.type = data.type;\n            }\n            if (\"stateIds\" in data && data.stateIds != undefined) {\n                this.stateIds = data.stateIds;\n            }\n        }\n    }\n    get type() {\n        return pb_1.Message.getFieldWithDefault(this, 2, StateSubscribtion.SubscriptionType.cancle) as StateSubscribtion.SubscriptionType;\n    }\n    set type(value: StateSubscribtion.SubscriptionType) {\n        pb_1.Message.setField(this, 2, value);\n    }\n    get stateIds() {\n        return pb_1.Message.getFieldWithDefault(this, 3, []) as string[];\n    }\n    set stateIds(value: string[]) {\n        pb_1.Message.setField(this, 3, value);\n    }\n    static fromObject(data: {\n        type?: StateSubscribtion.SubscriptionType;\n        stateIds?: string[];\n    }): StateSubscribtion {\n        const message = new StateSubscribtion({});\n        if (data.type != null) {\n            message.type = data.type;\n        }\n        if (data.stateIds != null) {\n            message.stateIds = data.stateIds;\n        }\n        return message;\n    }\n    toObject() {\n        const data: {\n            type?: StateSubscribtion.SubscriptionType;\n            stateIds?: string[];\n        } = {};\n        if (this.type != null) {\n            data.type = this.type;\n        }\n        if (this.stateIds != null) {\n            data.stateIds = this.stateIds;\n        }\n        return data;\n    }\n    serialize(): Uint8Array;\n    serialize(w: pb_1.BinaryWriter): void;\n    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n        const writer = w || new pb_1.BinaryWriter();\n        if (this.type != StateSubscribtion.SubscriptionType.cancle)\n            writer.writeEnum(2, this.type);\n        if (this.stateIds.length)\n            writer.writeRepeatedString(3, this.stateIds);\n        if (!w)\n            return writer.getResultBuffer();\n    }\n    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): StateSubscribtion {\n        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new StateSubscribtion();\n        while (reader.nextField()) {\n            if (reader.isEndGroup())\n                break;\n            switch (reader.getFieldNumber()) {\n                case 2:\n                    message.type = reader.readEnum();\n                    break;\n                case 3:\n                    pb_1.Message.addToRepeatedField(message, 3, reader.readString());\n                    break;\n                default: reader.skipField();\n            }\n        }\n        return message;\n    }\n    serializeBinary(): Uint8Array {\n        return this.serialize();\n    }\n    static deserializeBinary(bytes: Uint8Array): StateSubscribtion {\n        return StateSubscribtion.deserialize(bytes);\n    }\n}\nexport namespace StateSubscribtion {\n    export enum SubscriptionType {\n        cancle = 0,\n        subscripe = 1\n    }\n}\nexport class SearchState extends pb_1.Message {\n    #one_of_decls: number[][] = [];\n    constructor(data?: any[] | {\n        userId?: string;\n        query?: string;\n    }) {\n        super();\n        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n        if (!Array.isArray(data) && typeof data == \"object\") {\n            if (\"userId\" in data && data.userId != undefined) {\n                this.userId = data.userId;\n            }\n            if (\"query\" in data && data.query != undefined) {\n                this.query = data.query;\n            }\n        }\n    }\n    get userId() {\n        return pb_1.Message.getFieldWithDefault(this, 1, \"\") as string;\n    }\n    set userId(value: string) {\n        pb_1.Message.setField(this, 1, value);\n    }\n    get query() {\n        return pb_1.Message.getFieldWithDefault(this, 2, \"\") as string;\n    }\n    set query(value: string) {\n        pb_1.Message.setField(this, 2, value);\n    }\n    static fromObject(data: {\n        userId?: string;\n        query?: string;\n    }): SearchState {\n        const message = new SearchState({});\n        if (data.userId != null) {\n            message.userId = data.userId;\n        }\n        if (data.query != null) {\n            message.query = data.query;\n        }\n        return message;\n    }\n    toObject() {\n        const data: {\n            userId?: string;\n            query?: string;\n        } = {};\n        if (this.userId != null) {\n            data.userId = this.userId;\n        }\n        if (this.query != null) {\n            data.query = this.query;\n        }\n        return data;\n    }\n    serialize(): Uint8Array;\n    serialize(w: pb_1.BinaryWriter): void;\n    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n        const writer = w || new pb_1.BinaryWriter();\n        if (this.userId.length)\n            writer.writeString(1, this.userId);\n        if (this.query.length)\n            writer.writeString(2, this.query);\n        if (!w)\n            return writer.getResultBuffer();\n    }\n    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SearchState {\n        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SearchState();\n        while (reader.nextField()) {\n            if (reader.isEndGroup())\n                break;\n            switch (reader.getFieldNumber()) {\n                case 1:\n                    message.userId = reader.readString();\n                    break;\n                case 2:\n                    message.query = reader.readString();\n                    break;\n                default: reader.skipField();\n            }\n        }\n        return message;\n    }\n    serializeBinary(): Uint8Array {\n        return this.serialize();\n    }\n    static deserializeBinary(bytes: Uint8Array): SearchState {\n        return SearchState.deserialize(bytes);\n    }\n}\nexport class SearchStateResponse extends pb_1.Message {\n    #one_of_decls: number[][] = [];\n    constructor(data?: any[] | {\n        states?: State[];\n    }) {\n        super();\n        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n        if (!Array.isArray(data) && typeof data == \"object\") {\n            if (\"states\" in data && data.states != undefined) {\n                this.states = data.states;\n            }\n        }\n    }\n    get states() {\n        return pb_1.Message.getRepeatedWrapperField(this, State, 1) as State[];\n    }\n    set states(value: State[]) {\n        pb_1.Message.setRepeatedWrapperField(this, 1, value);\n    }\n    static fromObject(data: {\n        states?: ReturnType<typeof State.prototype.toObject>[];\n    }): SearchStateResponse {\n        const message = new SearchStateResponse({});\n        if (data.states != null) {\n            message.states = data.states.map(item => State.fromObject(item));\n        }\n        return message;\n    }\n    toObject() {\n        const data: {\n            states?: ReturnType<typeof State.prototype.toObject>[];\n        } = {};\n        if (this.states != null) {\n            data.states = this.states.map((item: State) => item.toObject());\n        }\n        return data;\n    }\n    serialize(): Uint8Array;\n    serialize(w: pb_1.BinaryWriter): void;\n    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n        const writer = w || new pb_1.BinaryWriter();\n        if (this.states.length)\n            writer.writeRepeatedMessage(1, this.states, (item: State) => item.serialize(writer));\n        if (!w)\n            return writer.getResultBuffer();\n    }\n    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SearchStateResponse {\n        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SearchStateResponse();\n        while (reader.nextField()) {\n            if (reader.isEndGroup())\n                break;\n            switch (reader.getFieldNumber()) {\n                case 1:\n                    reader.readMessage(message.states, () => pb_1.Message.addToRepeatedWrapperField(message, 1, State.deserialize(reader), State));\n                    break;\n                default: reader.skipField();\n            }\n        }\n        return message;\n    }\n    serializeBinary(): Uint8Array {\n        return this.serialize();\n    }\n    static deserializeBinary(bytes: Uint8Array): SearchStateResponse {\n        return SearchStateResponse.deserialize(bytes);\n    }\n}\nexport class State extends pb_1.Message {\n    #one_of_decls: number[][] = [[3, 4, 5, 99], [6]];\n    constructor(data?: any[] | ({\n        stateId?: string;\n    } & (({\n        stringValue?: string;\n        boolValue?: never;\n        doubleValue?: never;\n        other?: never;\n    } | {\n        stringValue?: never;\n        boolValue?: boolean;\n        doubleValue?: never;\n        other?: never;\n    } | {\n        stringValue?: never;\n        boolValue?: never;\n        doubleValue?: number;\n        other?: never;\n    } | {\n        stringValue?: never;\n        boolValue?: never;\n        doubleValue?: never;\n        other?: string;\n    }) | ({\n        common?: State.StateCommon;\n    })))) {\n        super();\n        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n        if (!Array.isArray(data) && typeof data == \"object\") {\n            if (\"stateId\" in data && data.stateId != undefined) {\n                this.stateId = data.stateId;\n            }\n            if (\"stringValue\" in data && data.stringValue != undefined) {\n                this.stringValue = data.stringValue;\n            }\n            if (\"boolValue\" in data && data.boolValue != undefined) {\n                this.boolValue = data.boolValue;\n            }\n            if (\"doubleValue\" in data && data.doubleValue != undefined) {\n                this.doubleValue = data.doubleValue;\n            }\n            if (\"other\" in data && data.other != undefined) {\n                this.other = data.other;\n            }\n            if (\"common\" in data && data.common != undefined) {\n                this.common = data.common;\n            }\n        }\n    }\n    get stateId() {\n        return pb_1.Message.getFieldWithDefault(this, 1, \"\") as string;\n    }\n    set stateId(value: string) {\n        pb_1.Message.setField(this, 1, value);\n    }\n    get stringValue() {\n        return pb_1.Message.getFieldWithDefault(this, 3, \"\") as string;\n    }\n    set stringValue(value: string) {\n        pb_1.Message.setOneofField(this, 3, this.#one_of_decls[0], value);\n    }\n    get has_stringValue() {\n        return pb_1.Message.getField(this, 3) != null;\n    }\n    get boolValue() {\n        return pb_1.Message.getFieldWithDefault(this, 4, false) as boolean;\n    }\n    set boolValue(value: boolean) {\n        pb_1.Message.setOneofField(this, 4, this.#one_of_decls[0], value);\n    }\n    get has_boolValue() {\n        return pb_1.Message.getField(this, 4) != null;\n    }\n    get doubleValue() {\n        return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;\n    }\n    set doubleValue(value: number) {\n        pb_1.Message.setOneofField(this, 5, this.#one_of_decls[0], value);\n    }\n    get has_doubleValue() {\n        return pb_1.Message.getField(this, 5) != null;\n    }\n    get other() {\n        return pb_1.Message.getFieldWithDefault(this, 99, \"\") as string;\n    }\n    set other(value: string) {\n        pb_1.Message.setOneofField(this, 99, this.#one_of_decls[0], value);\n    }\n    get has_other() {\n        return pb_1.Message.getField(this, 99) != null;\n    }\n    get common() {\n        return pb_1.Message.getWrapperField(this, State.StateCommon, 6) as State.StateCommon;\n    }\n    set common(value: State.StateCommon) {\n        pb_1.Message.setOneofWrapperField(this, 6, this.#one_of_decls[1], value);\n    }\n    get has_common() {\n        return pb_1.Message.getField(this, 6) != null;\n    }\n    get value() {\n        const cases: {\n            [index: number]: \"none\" | \"stringValue\" | \"boolValue\" | \"doubleValue\" | \"other\";\n        } = {\n            0: \"none\",\n            3: \"stringValue\",\n            4: \"boolValue\",\n            5: \"doubleValue\",\n            99: \"other\"\n        };\n        return cases[pb_1.Message.computeOneofCase(this, [3, 4, 5, 99])];\n    }\n    get _common() {\n        const cases: {\n            [index: number]: \"none\" | \"common\";\n        } = {\n            0: \"none\",\n            6: \"common\"\n        };\n        return cases[pb_1.Message.computeOneofCase(this, [6])];\n    }\n    static fromObject(data: {\n        stateId?: string;\n        stringValue?: string;\n        boolValue?: boolean;\n        doubleValue?: number;\n        other?: string;\n        common?: ReturnType<typeof State.StateCommon.prototype.toObject>;\n    }): State {\n        const message = new State({});\n        if (data.stateId != null) {\n            message.stateId = data.stateId;\n        }\n        if (data.stringValue != null) {\n            message.stringValue = data.stringValue;\n        }\n        if (data.boolValue != null) {\n            message.boolValue = data.boolValue;\n        }\n        if (data.doubleValue != null) {\n            message.doubleValue = data.doubleValue;\n        }\n        if (data.other != null) {\n            message.other = data.other;\n        }\n        if (data.common != null) {\n            message.common = State.StateCommon.fromObject(data.common);\n        }\n        return message;\n    }\n    toObject() {\n        const data: {\n            stateId?: string;\n            stringValue?: string;\n            boolValue?: boolean;\n            doubleValue?: number;\n            other?: string;\n            common?: ReturnType<typeof State.StateCommon.prototype.toObject>;\n        } = {};\n        if (this.stateId != null) {\n            data.stateId = this.stateId;\n        }\n        if (this.stringValue != null) {\n            data.stringValue = this.stringValue;\n        }\n        if (this.boolValue != null) {\n            data.boolValue = this.boolValue;\n        }\n        if (this.doubleValue != null) {\n            data.doubleValue = this.doubleValue;\n        }\n        if (this.other != null) {\n            data.other = this.other;\n        }\n        if (this.common != null) {\n            data.common = this.common.toObject();\n        }\n        return data;\n    }\n    serialize(): Uint8Array;\n    serialize(w: pb_1.BinaryWriter): void;\n    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n        const writer = w || new pb_1.BinaryWriter();\n        if (this.stateId.length)\n            writer.writeString(1, this.stateId);\n        if (this.has_stringValue)\n            writer.writeString(3, this.stringValue);\n        if (this.has_boolValue)\n            writer.writeBool(4, this.boolValue);\n        if (this.has_doubleValue)\n            writer.writeDouble(5, this.doubleValue);\n        if (this.has_other)\n            writer.writeString(99, this.other);\n        if (this.has_common)\n            writer.writeMessage(6, this.common, () => this.common.serialize(writer));\n        if (!w)\n            return writer.getResultBuffer();\n    }\n    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): State {\n        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new State();\n        while (reader.nextField()) {\n            if (reader.isEndGroup())\n                break;\n            switch (reader.getFieldNumber()) {\n                case 1:\n                    message.stateId = reader.readString();\n                    break;\n                case 3:\n                    message.stringValue = reader.readString();\n                    break;\n                case 4:\n                    message.boolValue = reader.readBool();\n                    break;\n                case 5:\n                    message.doubleValue = reader.readDouble();\n                    break;\n                case 99:\n                    message.other = reader.readString();\n                    break;\n                case 6:\n                    reader.readMessage(message.common, () => message.common = State.StateCommon.deserialize(reader));\n                    break;\n                default: reader.skipField();\n            }\n        }\n        return message;\n    }\n    serializeBinary(): Uint8Array {\n        return this.serialize();\n    }\n    static deserializeBinary(bytes: Uint8Array): State {\n        return State.deserialize(bytes);\n    }\n}\nexport namespace State {\n    export class StateCommon extends pb_1.Message {\n        #one_of_decls: number[][] = [[7], [8], [9], [10]];\n        constructor(data?: any[] | ({\n            name?: string;\n            desc?: string;\n            type?: State.StateCommon.StateType;\n            read?: boolean;\n            write?: boolean;\n            role?: string;\n        } & (({\n            unit?: string;\n        }) | ({\n            step?: number;\n        }) | ({\n            min?: number;\n        }) | ({\n            max?: number;\n        })))) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"name\" in data && data.name != undefined) {\n                    this.name = data.name;\n                }\n                if (\"desc\" in data && data.desc != undefined) {\n                    this.desc = data.desc;\n                }\n                if (\"type\" in data && data.type != undefined) {\n                    this.type = data.type;\n                }\n                if (\"read\" in data && data.read != undefined) {\n                    this.read = data.read;\n                }\n                if (\"write\" in data && data.write != undefined) {\n                    this.write = data.write;\n                }\n                if (\"role\" in data && data.role != undefined) {\n                    this.role = data.role;\n                }\n                if (\"unit\" in data && data.unit != undefined) {\n                    this.unit = data.unit;\n                }\n                if (\"step\" in data && data.step != undefined) {\n                    this.step = data.step;\n                }\n                if (\"min\" in data && data.min != undefined) {\n                    this.min = data.min;\n                }\n                if (\"max\" in data && data.max != undefined) {\n                    this.max = data.max;\n                }\n            }\n        }\n        get name() {\n            return pb_1.Message.getFieldWithDefault(this, 1, \"\") as string;\n        }\n        set name(value: string) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        get desc() {\n            return pb_1.Message.getFieldWithDefault(this, 2, \"\") as string;\n        }\n        set desc(value: string) {\n            pb_1.Message.setField(this, 2, value);\n        }\n        get type() {\n            return pb_1.Message.getFieldWithDefault(this, 3, State.StateCommon.StateType.boolean) as State.StateCommon.StateType;\n        }\n        set type(value: State.StateCommon.StateType) {\n            pb_1.Message.setField(this, 3, value);\n        }\n        get read() {\n            return pb_1.Message.getFieldWithDefault(this, 4, false) as boolean;\n        }\n        set read(value: boolean) {\n            pb_1.Message.setField(this, 4, value);\n        }\n        get write() {\n            return pb_1.Message.getFieldWithDefault(this, 5, false) as boolean;\n        }\n        set write(value: boolean) {\n            pb_1.Message.setField(this, 5, value);\n        }\n        get role() {\n            return pb_1.Message.getFieldWithDefault(this, 6, \"\") as string;\n        }\n        set role(value: string) {\n            pb_1.Message.setField(this, 6, value);\n        }\n        get unit() {\n            return pb_1.Message.getFieldWithDefault(this, 7, \"\") as string;\n        }\n        set unit(value: string) {\n            pb_1.Message.setOneofField(this, 7, this.#one_of_decls[0], value);\n        }\n        get has_unit() {\n            return pb_1.Message.getField(this, 7) != null;\n        }\n        get step() {\n            return pb_1.Message.getFieldWithDefault(this, 8, 0) as number;\n        }\n        set step(value: number) {\n            pb_1.Message.setOneofField(this, 8, this.#one_of_decls[1], value);\n        }\n        get has_step() {\n            return pb_1.Message.getField(this, 8) != null;\n        }\n        get min() {\n            return pb_1.Message.getFieldWithDefault(this, 9, 0) as number;\n        }\n        set min(value: number) {\n            pb_1.Message.setOneofField(this, 9, this.#one_of_decls[2], value);\n        }\n        get has_min() {\n            return pb_1.Message.getField(this, 9) != null;\n        }\n        get max() {\n            return pb_1.Message.getFieldWithDefault(this, 10, 0) as number;\n        }\n        set max(value: number) {\n            pb_1.Message.setOneofField(this, 10, this.#one_of_decls[3], value);\n        }\n        get has_max() {\n            return pb_1.Message.getField(this, 10) != null;\n        }\n        get _unit() {\n            const cases: {\n                [index: number]: \"none\" | \"unit\";\n            } = {\n                0: \"none\",\n                7: \"unit\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [7])];\n        }\n        get _step() {\n            const cases: {\n                [index: number]: \"none\" | \"step\";\n            } = {\n                0: \"none\",\n                8: \"step\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [8])];\n        }\n        get _min() {\n            const cases: {\n                [index: number]: \"none\" | \"min\";\n            } = {\n                0: \"none\",\n                9: \"min\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [9])];\n        }\n        get _max() {\n            const cases: {\n                [index: number]: \"none\" | \"max\";\n            } = {\n                0: \"none\",\n                10: \"max\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [10])];\n        }\n        static fromObject(data: {\n            name?: string;\n            desc?: string;\n            type?: State.StateCommon.StateType;\n            read?: boolean;\n            write?: boolean;\n            role?: string;\n            unit?: string;\n            step?: number;\n            min?: number;\n            max?: number;\n        }): StateCommon {\n            const message = new StateCommon({});\n            if (data.name != null) {\n                message.name = data.name;\n            }\n            if (data.desc != null) {\n                message.desc = data.desc;\n            }\n            if (data.type != null) {\n                message.type = data.type;\n            }\n            if (data.read != null) {\n                message.read = data.read;\n            }\n            if (data.write != null) {\n                message.write = data.write;\n            }\n            if (data.role != null) {\n                message.role = data.role;\n            }\n            if (data.unit != null) {\n                message.unit = data.unit;\n            }\n            if (data.step != null) {\n                message.step = data.step;\n            }\n            if (data.min != null) {\n                message.min = data.min;\n            }\n            if (data.max != null) {\n                message.max = data.max;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                name?: string;\n                desc?: string;\n                type?: State.StateCommon.StateType;\n                read?: boolean;\n                write?: boolean;\n                role?: string;\n                unit?: string;\n                step?: number;\n                min?: number;\n                max?: number;\n            } = {};\n            if (this.name != null) {\n                data.name = this.name;\n            }\n            if (this.desc != null) {\n                data.desc = this.desc;\n            }\n            if (this.type != null) {\n                data.type = this.type;\n            }\n            if (this.read != null) {\n                data.read = this.read;\n            }\n            if (this.write != null) {\n                data.write = this.write;\n            }\n            if (this.role != null) {\n                data.role = this.role;\n            }\n            if (this.unit != null) {\n                data.unit = this.unit;\n            }\n            if (this.step != null) {\n                data.step = this.step;\n            }\n            if (this.min != null) {\n                data.min = this.min;\n            }\n            if (this.max != null) {\n                data.max = this.max;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.name.length)\n                writer.writeString(1, this.name);\n            if (this.desc.length)\n                writer.writeString(2, this.desc);\n            if (this.type != State.StateCommon.StateType.boolean)\n                writer.writeEnum(3, this.type);\n            if (this.read != false)\n                writer.writeBool(4, this.read);\n            if (this.write != false)\n                writer.writeBool(5, this.write);\n            if (this.role.length)\n                writer.writeString(6, this.role);\n            if (this.has_unit)\n                writer.writeString(7, this.unit);\n            if (this.has_step)\n                writer.writeInt32(8, this.step);\n            if (this.has_min)\n                writer.writeInt32(9, this.min);\n            if (this.has_max)\n                writer.writeInt32(10, this.max);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): StateCommon {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new StateCommon();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.name = reader.readString();\n                        break;\n                    case 2:\n                        message.desc = reader.readString();\n                        break;\n                    case 3:\n                        message.type = reader.readEnum();\n                        break;\n                    case 4:\n                        message.read = reader.readBool();\n                        break;\n                    case 5:\n                        message.write = reader.readBool();\n                        break;\n                    case 6:\n                        message.role = reader.readString();\n                        break;\n                    case 7:\n                        message.unit = reader.readString();\n                        break;\n                    case 8:\n                        message.step = reader.readInt32();\n                        break;\n                    case 9:\n                        message.min = reader.readInt32();\n                        break;\n                    case 10:\n                        message.max = reader.readInt32();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): StateCommon {\n            return StateCommon.deserialize(bytes);\n        }\n    }\n    export namespace StateCommon {\n        export enum StateType {\n            boolean = 0,\n            str = 1,\n            number = 2\n        }\n    }\n}\ninterface GrpcUnaryServiceInterface<P, R> {\n    (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;\n    (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;\n    (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;\n    (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;\n}\ninterface GrpcStreamServiceInterface<P, R> {\n    (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;\n    (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;\n}\ninterface GrpWritableServiceInterface<P, R> {\n    (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;\n    (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;\n    (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;\n    (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;\n}\ninterface GrpcChunkServiceInterface<P, R> {\n    (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;\n    (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;\n}\ninterface GrpcPromiseServiceInterface<P, R> {\n    (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;\n    (message: P, options?: grpc_1.CallOptions): Promise<R>;\n}\nexport abstract class UnimplementedStateUpdateService {\n    static definition = {\n        Subscibe: {\n            path: \"/StateUpdate/Subscibe\",\n            requestStream: false,\n            responseStream: true,\n            requestSerialize: (message: StateSubscribtion) => Buffer.from(message.serialize()),\n            requestDeserialize: (bytes: Buffer) => StateSubscribtion.deserialize(new Uint8Array(bytes)),\n            responseSerialize: (message: StatesValueUpdate) => Buffer.from(message.serialize()),\n            responseDeserialize: (bytes: Buffer) => StatesValueUpdate.deserialize(new Uint8Array(bytes))\n        },\n        updateValue: {\n            path: \"/StateUpdate/updateValue\",\n            requestStream: false,\n            responseStream: false,\n            requestSerialize: (message: StateValueUpdateRequest) => Buffer.from(message.serialize()),\n            requestDeserialize: (bytes: Buffer) => StateValueUpdateRequest.deserialize(new Uint8Array(bytes)),\n            responseSerialize: (message: StateValueUpdateResponse) => Buffer.from(message.serialize()),\n            responseDeserialize: (bytes: Buffer) => StateValueUpdateResponse.deserialize(new Uint8Array(bytes))\n        },\n        searchState: {\n            path: \"/StateUpdate/searchState\",\n            requestStream: false,\n            responseStream: false,\n            requestSerialize: (message: SearchState) => Buffer.from(message.serialize()),\n            requestDeserialize: (bytes: Buffer) => SearchState.deserialize(new Uint8Array(bytes)),\n            responseSerialize: (message: SearchStateResponse) => Buffer.from(message.serialize()),\n            responseDeserialize: (bytes: Buffer) => SearchStateResponse.deserialize(new Uint8Array(bytes))\n        },\n        searchStateStream: {\n            path: \"/StateUpdate/searchStateStream\",\n            requestStream: true,\n            responseStream: true,\n            requestSerialize: (message: SearchState) => Buffer.from(message.serialize()),\n            requestDeserialize: (bytes: Buffer) => SearchState.deserialize(new Uint8Array(bytes)),\n            responseSerialize: (message: SearchStateResponse) => Buffer.from(message.serialize()),\n            responseDeserialize: (bytes: Buffer) => SearchStateResponse.deserialize(new Uint8Array(bytes))\n        }\n    };\n    [method: string]: grpc_1.UntypedHandleCall;\n    abstract Subscibe(call: grpc_1.ServerWritableStream<StateSubscribtion, StatesValueUpdate>): void;\n    abstract updateValue(call: grpc_1.ServerUnaryCall<StateValueUpdateRequest, StateValueUpdateResponse>, callback: grpc_1.sendUnaryData<StateValueUpdateResponse>): void;\n    abstract searchState(call: grpc_1.ServerUnaryCall<SearchState, SearchStateResponse>, callback: grpc_1.sendUnaryData<SearchStateResponse>): void;\n    abstract searchStateStream(call: grpc_1.ServerDuplexStream<SearchState, SearchStateResponse>): void;\n}\nexport class StateUpdateClient extends grpc_1.makeGenericClientConstructor(UnimplementedStateUpdateService.definition, \"StateUpdate\", {}) {\n    constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {\n        super(address, credentials, options);\n    }\n    Subscibe: GrpcStreamServiceInterface<StateSubscribtion, StatesValueUpdate> = (message: StateSubscribtion, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<StatesValueUpdate> => {\n        return super.Subscibe(message, metadata, options);\n    };\n    updateValue: GrpcUnaryServiceInterface<StateValueUpdateRequest, StateValueUpdateResponse> = (message: StateValueUpdateRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<StateValueUpdateResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<StateValueUpdateResponse>, callback?: grpc_1.requestCallback<StateValueUpdateResponse>): grpc_1.ClientUnaryCall => {\n        return super.updateValue(message, metadata, options, callback);\n    };\n    searchState: GrpcUnaryServiceInterface<SearchState, SearchStateResponse> = (message: SearchState, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<SearchStateResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<SearchStateResponse>, callback?: grpc_1.requestCallback<SearchStateResponse>): grpc_1.ClientUnaryCall => {\n        return super.searchState(message, metadata, options, callback);\n    };\n    searchStateStream: GrpcChunkServiceInterface<SearchState, SearchStateResponse> = (metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<SearchState, SearchStateResponse> => {\n        return super.searchStateStream(metadata, options);\n    };\n}\n"],
  "mappings": "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",
  "names": ["_one_of_decls", "StateSubscribtion", "SubscriptionType", "State", "StateCommon", "StateType"]
}
