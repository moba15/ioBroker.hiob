{
  "version": 3,
  "sources": ["../../../src/server/services/state-service.ts"],
  "sourcesContent": ["\nimport * as m from \"../..//main\";\nimport * as grpc from \"@grpc/grpc-js\";\nimport * as proto from \"../../generated/state/state\"\nimport { SearchState, SearchStateResponse, StateSubscribtion, StateValueUpdate, StateValueUpdateRequest, StateValueUpdateResponse, UnimplementedStateUpdateService } from \"../../generated/state/state\";\nimport { checkAuthentication } from \"./authenticator/authenticator\";\nclass Test  extends UnimplementedStateUpdateService {\n    Subscibe(call: grpc.ServerWritableStream<StateSubscribtion, proto.StatesValueUpdate>): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    updateValue(call: grpc.ServerUnaryCall<StateValueUpdateRequest, StateValueUpdateResponse>, callback: grpc.sendUnaryData<StateValueUpdateResponse>): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    searchState(call: grpc.ServerUnaryCall<SearchState, SearchStateResponse>, callback: grpc.sendUnaryData<SearchStateResponse>): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    searchStateStream(call: grpc.ServerDuplexStream<SearchState, SearchStateResponse>): void {\n        throw new Error(\"Method not implemented.\");\n    }\n\n}\n\nexport function addStateServices(gRpcServer: grpc.Server, adapter : m.SamartHomeHandyBis) : void {\n    gRpcServer.addService(proto.StateUpdateClient.service, {\n        Subscibe: async (call: grpc.ServerWritableStream<StateSubscribtion, proto.StatesValueUpdate>) => {\n            const authStatus = checkAuthentication(call.metadata)\n            if(authStatus.code != grpc.status.OK) {\n                call.emit(\"error\", authStatus );\n                return;\n            }\n\n\n            const result = await adapter.subscribeToDataPointsProto(call.request.stateIds);\n            const stateValueUpdates = result.map(e => {\n                return new proto.StateValueUpdate({\n                    stateId: e.objectID,\n                    stringValue: e.val.toString(),\n                    acc: e.ack,\n                    time: 0,\n                });\n            });\n            call.write(new proto.StatesValueUpdate({stateUpdates: stateValueUpdates}));\n            //TODO Device Id from header\n            const id = call.metadata.get(\"deviceId\")[0].toString();\n            adapter.listener.addWriter(id, call);\n        },\n        searchStateStream: async (call: grpc.ServerDuplexStream<SearchState, SearchStateResponse>) => {\n            adapter.log.debug(\"Start search\");\n            //1. Return first level\n            const firstLevelMap = adapter.stateSearchEngine.getFirstLevel();\n            const firstLevelResponse : proto.State[] = [];\n            for(const [id, adapaterObj] of firstLevelMap ) {\n                firstLevelResponse.push(new proto.State({\n                    stateId: id,\n                }))\n            }\n            call.write(new proto.SearchStateResponse({states: firstLevelResponse}));\n\n        } });\n\n\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,WAAsB;AACtB,YAAuB;AACvB,mBAA0K;AAC1K,2BAAoC;AACpC,MAAM,aAAc,6CAAgC;AAAA,EAChD,SAAS,MAAmF;AACxF,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC7C;AAAA,EACA,YAAY,MAA+E,UAA8D;AACrJ,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC7C;AAAA,EACA,YAAY,MAA8D,UAAyD;AAC/H,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC7C;AAAA,EACA,kBAAkB,MAAuE;AACrF,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC7C;AAEJ;AAEO,SAAS,iBAAiB,YAAyB,SAAuC;AAC7F,aAAW,WAAW,MAAM,kBAAkB,SAAS;AAAA,IACnD,UAAU,OAAO,SAAgF;AAC7F,YAAM,iBAAa,0CAAoB,KAAK,QAAQ;AACpD,UAAG,WAAW,QAAQ,KAAK,OAAO,IAAI;AAClC,aAAK,KAAK,SAAS,UAAW;AAC9B;AAAA,MACJ;AAGA,YAAM,SAAS,MAAM,QAAQ,2BAA2B,KAAK,QAAQ,QAAQ;AAC7E,YAAM,oBAAoB,OAAO,IAAI,OAAK;AACtC,eAAO,IAAI,MAAM,iBAAiB;AAAA,UAC9B,SAAS,EAAE;AAAA,UACX,aAAa,EAAE,IAAI,SAAS;AAAA,UAC5B,KAAK,EAAE;AAAA,UACP,MAAM;AAAA,QACV,CAAC;AAAA,MACL,CAAC;AACD,WAAK,MAAM,IAAI,MAAM,kBAAkB,EAAC,cAAc,kBAAiB,CAAC,CAAC;AAEzE,YAAM,KAAK,KAAK,SAAS,IAAI,UAAU,EAAE,CAAC,EAAE,SAAS;AACrD,cAAQ,SAAS,UAAU,IAAI,IAAI;AAAA,IACvC;AAAA,IACA,mBAAmB,OAAO,SAAoE;AAC1F,cAAQ,IAAI,MAAM,cAAc;AAEhC,YAAM,gBAAgB,QAAQ,kBAAkB,cAAc;AAC9D,YAAM,qBAAqC,CAAC;AAC5C,iBAAU,CAAC,IAAI,WAAW,KAAK,eAAgB;AAC3C,2BAAmB,KAAK,IAAI,MAAM,MAAM;AAAA,UACpC,SAAS;AAAA,QACb,CAAC,CAAC;AAAA,MACN;AACA,WAAK,MAAM,IAAI,MAAM,oBAAoB,EAAC,QAAQ,mBAAkB,CAAC,CAAC;AAAA,IAE1E;AAAA,EAAE,CAAC;AAGX;",
  "names": []
}
